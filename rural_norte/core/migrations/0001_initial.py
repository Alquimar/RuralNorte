# Generated by Django 2.0.5 on 2018-05-15 02:40

import cuser.fields
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AplicacaoCredito',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cadastrado_em', models.DateTimeField(auto_now_add=True, null=True)),
                ('modificado_em', models.DateTimeField(auto_now=True, null=True)),
                ('desativado_em', models.DateTimeField(blank=True, null=True)),
                ('tipo_aplicacao_credito', models.IntegerField(choices=[(1, 'Apoio inicial (antes de 2015)'), (2, 'Apoio inicial I (após 2015)'), (3, 'Apoio inicial II (após 2015)'), (4, 'Fomento'), (5, 'Fomento Mulher'), (6, 'Moradia'), (7, 'PNHR-Minha Casa Minha Vida'), (8, 'Reforma Moradia'), (9, 'PNHR-Reforma')], verbose_name='Tipo de crédito')),
                ('valor', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Valor (R$)')),
                ('cadastrado_por', cuser.fields.CurrentUserField(editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='core_aplicacaocredito_cadastrado_por', to=settings.AUTH_USER_MODEL)),
                ('desativado_por', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='core_aplicacaocredito_desativado_por', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Aplicação do crédito no lote',
                'verbose_name_plural': 'Com relação aos créditos, como está a aplicação no lote?',
            },
        ),
        migrations.CreateModel(
            name='AtividadeExtrativista',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cadastrado_em', models.DateTimeField(auto_now_add=True, null=True)),
                ('modificado_em', models.DateTimeField(auto_now=True, null=True)),
                ('desativado_em', models.DateTimeField(blank=True, null=True)),
                ('especificacao', models.IntegerField(choices=[(1, 'Açaí(Kg)'), (2, 'Babaçu(Kg)'), (3, 'Buriti(Kg)'), (4, 'Cagaita(Kg)'), (5, 'Murici(Kg)'), (6, 'Pequi(Kg)'), (7, 'Outros')], verbose_name='Especificação')),
                ('outros', models.CharField(blank=True, max_length=30, null=True, verbose_name='Outros')),
                ('quantidade_frutos_ano', models.IntegerField(verbose_name='Quantidade Colhida / Ano - Fruto(s)')),
                ('quantidade_palmitos_ano', models.IntegerField(verbose_name='Quantidade Colhida / Ano - Palmito(s)')),
                ('valor', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Valor R$/Kg')),
                ('cadastrado_por', cuser.fields.CurrentUserField(editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='core_atividadeextrativista_cadastrado_por', to=settings.AUTH_USER_MODEL)),
                ('desativado_por', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='core_atividadeextrativista_desativado_por', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Atividade Extrativista',
                'verbose_name_plural': 'Atividades Extrativistas',
            },
        ),
        migrations.CreateModel(
            name='AtividadeFisica',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cadastrado_em', models.DateTimeField(auto_now_add=True, null=True)),
                ('modificado_em', models.DateTimeField(auto_now=True, null=True)),
                ('desativado_em', models.DateTimeField(blank=True, null=True)),
                ('atividade_fisica', models.IntegerField(choices=[(1, 'Futebol'), (2, 'Caminhada/corrida'), (3, 'Nenhuma atividade física'), (4, 'Outros')], verbose_name='Esporte/atividade física')),
                ('outros', models.CharField(blank=True, max_length=50, null=True, verbose_name='Outros (Especificar)')),
                ('cadastrado_por', cuser.fields.CurrentUserField(editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='core_atividadefisica_cadastrado_por', to=settings.AUTH_USER_MODEL)),
                ('desativado_por', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='core_atividadefisica_desativado_por', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Esporte/atividade física praticada',
                'verbose_name_plural': 'Quais são os esportes/atividades físicas praticados pelos familiares com maior frequência?',
            },
        ),
        migrations.CreateModel(
            name='AutoDeclaracaoEtnia',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cadastrado_em', models.DateTimeField(auto_now_add=True, null=True)),
                ('modificado_em', models.DateTimeField(auto_now=True, null=True)),
                ('desativado_em', models.DateTimeField(blank=True, null=True)),
                ('tipo_declaracao_etnia', models.IntegerField(choices=[(1, 'Negros'), (2, 'Pardos'), (3, 'Brancos'), (4, 'Índios'), (5, 'Orientais'), (6, 'Outros')], verbose_name='Etnia')),
                ('outros', models.CharField(blank=True, max_length=30, null=True, verbose_name='Outros')),
                ('quantidade', models.IntegerField(verbose_name='Quantos?')),
                ('cadastrado_por', cuser.fields.CurrentUserField(editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='core_autodeclaracaoetnia_cadastrado_por', to=settings.AUTH_USER_MODEL)),
                ('desativado_por', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='core_autodeclaracaoetnia_desativado_por', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Quantos moradores se declaram?',
                'verbose_name_plural': 'Quantos moradores se declaram?',
            },
        ),
        migrations.CreateModel(
            name='BemProdutivo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cadastrado_em', models.DateTimeField(auto_now_add=True, null=True)),
                ('modificado_em', models.DateTimeField(auto_now=True, null=True)),
                ('desativado_em', models.DateTimeField(blank=True, null=True)),
                ('bem_produtivo', models.IntegerField(choices=[(1, 'Trator'), (2, 'Caminhão'), (3, 'Caminhonete'), (4, 'Arado / grade'), (5, 'Plantadeira / adubadeira'), (6, 'Pulverizador "tratorizado"'), (7, 'Carroça ou carro de boi'), (8, 'Arado de tração animal'), (9, 'Triturador'), (10, 'Resfriador de leite'), (11, 'Cochos'), (12, 'Calcariadora'), (13, 'Bomba (pulverizador costal)'), (14, 'Matraca'), (15, 'Brete (vacinação gado)'), (16, 'Roçadeira'), (17, 'Motosserra'), (18, 'Outros')], verbose_name='Bem produtivo')),
                ('outros', models.CharField(blank=True, max_length=30, null=True, verbose_name='Outros')),
                ('quantidade', models.IntegerField(verbose_name='Quantidade')),
                ('cadastrado_por', cuser.fields.CurrentUserField(editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='core_bemprodutivo_cadastrado_por', to=settings.AUTH_USER_MODEL)),
                ('desativado_por', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='core_bemprodutivo_desativado_por', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Bem produtivo',
                'verbose_name_plural': 'Bens produtivos disponíveis no lote',
            },
        ),
        migrations.CreateModel(
            name='BeneficioSocial',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cadastrado_em', models.DateTimeField(auto_now_add=True, null=True)),
                ('modificado_em', models.DateTimeField(auto_now=True, null=True)),
                ('desativado_em', models.DateTimeField(blank=True, null=True)),
                ('tipo_beneficio', models.IntegerField(choices=[(1, 'Aposentadoria por tempo de serviço/idade'), (2, 'Aposentadoria por invalidez'), (3, 'Auxílio maternidade'), (4, 'Bolsa família'), (5, 'Bolsa verde'), (6, 'Outros')], verbose_name='Qual documento o lote possui?')),
                ('outros', models.CharField(blank=True, max_length=30, null=True, verbose_name='Outros')),
                ('cadastrado_por', cuser.fields.CurrentUserField(editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='core_beneficiosocial_cadastrado_por', to=settings.AUTH_USER_MODEL)),
                ('desativado_por', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='core_beneficiosocial_desativado_por', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Tipo de benefício',
                'verbose_name_plural': 'Quais os tipos de benefício?',
            },
        ),
        migrations.CreateModel(
            name='ConstrucaoLote',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cadastrado_em', models.DateTimeField(auto_now_add=True, null=True)),
                ('modificado_em', models.DateTimeField(auto_now=True, null=True)),
                ('desativado_em', models.DateTimeField(blank=True, null=True)),
                ('construcao_no_lote', models.IntegerField(choices=[(1, 'Galpão'), (2, 'Curral'), (3, 'Chiqueiro'), (4, 'Galinheiro'), (5, 'Segunda casa'), (6, 'Represa'), (7, 'Espaço para cultos religiosos'), (8, 'Estabelecimento comercial'), (9, 'Agroindústria'), (10, 'Outros')], verbose_name='Construção')),
                ('outros', models.CharField(blank=True, max_length=30, null=True, verbose_name='Outros')),
                ('quantidade', models.IntegerField(verbose_name='Quantidade')),
                ('cadastrado_por', cuser.fields.CurrentUserField(editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='core_construcaolote_cadastrado_por', to=settings.AUTH_USER_MODEL)),
                ('desativado_por', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='core_construcaolote_desativado_por', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Contruído no lote',
                'verbose_name_plural': 'O que tem construído no lote?',
            },
        ),
        migrations.CreateModel(
            name='Contato',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cadastrado_em', models.DateTimeField(auto_now_add=True, null=True)),
                ('modificado_em', models.DateTimeField(auto_now=True, null=True)),
                ('desativado_em', models.DateTimeField(blank=True, null=True)),
                ('telefone', models.CharField(max_length=12, verbose_name='Telefone')),
                ('cadastrado_por', cuser.fields.CurrentUserField(editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='core_contato_cadastrado_por', to=settings.AUTH_USER_MODEL)),
                ('desativado_por', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='core_contato_desativado_por', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CreditoBancario',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cadastrado_em', models.DateTimeField(auto_now_add=True, null=True)),
                ('modificado_em', models.DateTimeField(auto_now=True, null=True)),
                ('desativado_em', models.DateTimeField(blank=True, null=True)),
                ('credito_bancario', models.IntegerField(choices=[(1, 'Micro Crédito Produtivo (A)'), (2, 'A'), (3, 'A/C'), (4, 'Jovem'), (5, 'Mulher'), (6, 'Recuperação (Complementar)'), (7, 'Outros')], verbose_name='Tipo de crédito')),
                ('outros', models.CharField(blank=True, max_length=30, null=True, verbose_name='Outros')),
                ('valor', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Valor (R$)')),
                ('adimplente', models.IntegerField(choices=[(1, 'Sim'), (0, 'Não')], verbose_name='Adimplente?')),
                ('cadastrado_por', cuser.fields.CurrentUserField(editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='core_creditobancario_cadastrado_por', to=settings.AUTH_USER_MODEL)),
                ('desativado_por', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='core_creditobancario_desativado_por', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Aplicação do crédito bancário na parcela',
                'verbose_name_plural': 'Com relação aos créditos bancários, como está a aplicação na parcela?',
            },
        ),
        migrations.CreateModel(
            name='DescarteAnimal',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cadastrado_em', models.DateTimeField(auto_now_add=True, null=True)),
                ('modificado_em', models.DateTimeField(auto_now=True, null=True)),
                ('desativado_em', models.DateTimeField(blank=True, null=True)),
                ('tipo_criacao', models.IntegerField(verbose_name='Tipo de criação')),
                ('especificacao', models.IntegerField(choices=[(10, 'Touros'), (20, 'Vacas'), (30, 'Novilhas(os) + de 02 anos'), (40, 'Novilhas(os) + de 01 ano'), (50, 'Bezerras(os)'), (60, 'Boi')], verbose_name='Especificação')),
                ('quantidade_cabecas_consumo', models.IntegerField(verbose_name='Nº de Cabeça(s) - Consumo')),
                ('quantidade_cabecas_comercio', models.IntegerField(verbose_name='Nº de Cabeça(s) - Comércio')),
                ('valor_cabeca', models.DecimalField(decimal_places=2, max_digits=7, verbose_name='R$/Cabeça')),
                ('canal_comercializacao', models.IntegerField(choices=[(1, 'Venda para outro produtor'), (2, 'Entrega para frigorífico/açougue'), (3, 'Venda para agentes "atravessadores"'), (4, 'Outros')], verbose_name='Formas/Canais de Comercialização')),
                ('canal_comercializacao_outros', models.CharField(blank=True, max_length=30, null=True, verbose_name='Outros (Especificar)')),
                ('cadastrado_por', cuser.fields.CurrentUserField(editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='core_descarteanimal_cadastrado_por', to=settings.AUTH_USER_MODEL)),
                ('desativado_por', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='core_descarteanimal_desativado_por', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='DocumentoLote',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cadastrado_em', models.DateTimeField(auto_now_add=True, null=True)),
                ('modificado_em', models.DateTimeField(auto_now=True, null=True)),
                ('desativado_em', models.DateTimeField(blank=True, null=True)),
                ('tipo_documento', models.IntegerField(choices=[(1, 'Contrato de Assentamento'), (2, 'Contrato de Concessão de Uso - CCU'), (3, 'Título Definitivo - não registrado'), (4, 'Título Definitivo - registrado cartório'), (5, 'Matrícula da Propriedade')], verbose_name='Documento')),
                ('cadastrado_por', cuser.fields.CurrentUserField(editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='core_documentolote_cadastrado_por', to=settings.AUTH_USER_MODEL)),
                ('desativado_por', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='core_documentolote_desativado_por', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Documento do lote',
                'verbose_name_plural': 'Quais documentos o lote possui?',
            },
        ),
        migrations.CreateModel(
            name='EspacoDisponivel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cadastrado_em', models.DateTimeField(auto_now_add=True, null=True)),
                ('modificado_em', models.DateTimeField(auto_now=True, null=True)),
                ('desativado_em', models.DateTimeField(blank=True, null=True)),
                ('espaco_disponivel', models.IntegerField(choices=[(1, 'Quadra de esportes'), (2, 'Campo de futebol'), (3, 'Salão de festas'), (4, 'Não possui')], verbose_name='Espaço disponível')),
                ('cadastrado_por', cuser.fields.CurrentUserField(editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='core_espacodisponivel_cadastrado_por', to=settings.AUTH_USER_MODEL)),
                ('desativado_por', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='core_espacodisponivel_desativado_por', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Espaço disponível para a prática de esporte/recreação',
                'verbose_name_plural': 'No assentamento quais são os espaços disponíveis para a prática de esporte ou para a recreação?',
            },
        ),
        migrations.CreateModel(
            name='EstabelecimentoEnsino',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cadastrado_em', models.DateTimeField(auto_now_add=True, null=True)),
                ('modificado_em', models.DateTimeField(auto_now=True, null=True)),
                ('desativado_em', models.DateTimeField(blank=True, null=True)),
                ('estabelecimento_ensino', models.IntegerField(choices=[(1, 'Pré-escolar (creche)'), (2, 'Ensino Fundamental'), (3, 'EJA'), (4, 'Ensino Médio'), (5, 'Ensino Superior'), (6, 'Ensino Profissionalizante'), (7, 'Não há estabelecimento de ensino no PA')], verbose_name='Estabelecimento de ensino')),
                ('cadastrado_por', cuser.fields.CurrentUserField(editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='core_estabelecimentoensino_cadastrado_por', to=settings.AUTH_USER_MODEL)),
                ('desativado_por', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='core_estabelecimentoensino_desativado_por', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Estabelecimento de ensino disponível no assentamento',
                'verbose_name_plural': 'Que tipo de estabelecimento de ensino está disponível no assentamento?',
            },
        ),
        migrations.CreateModel(
            name='EstruturaOrganizativa',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cadastrado_em', models.DateTimeField(auto_now_add=True, null=True)),
                ('modificado_em', models.DateTimeField(auto_now=True, null=True)),
                ('desativado_em', models.DateTimeField(blank=True, null=True)),
                ('tipo_estrutura_organizativa', models.IntegerField(choices=[(1, 'Associação comunitária'), (2, 'Cooperativas (produção, créditos, etc.)'), (3, 'Associação ou grupos de mulheres'), (4, 'Núcleos de base ligados aos movimentos'), (5, 'Trabalhos coletivos (ajuda mútua) "multirões"'), (6, 'Grupos vinculados à igreja (pastoral, etc.)'), (7, 'Grupos de jovens'), (8, 'Grupos de saúde (pastoral, farmácia viva)'), (9, 'Associação de pais e mestres e outros'), (10, 'Grupos de laser e cultura')], verbose_name='Estrutura organizativa')),
                ('frequencia', models.IntegerField(choices=[(1, 'Frequente (>70%)'), (2, 'Regularmente (50% a 70%)'), (3, 'Raramente (<50%)'), (4, 'Não Participa')], verbose_name='Frequência')),
                ('cadastrado_por', cuser.fields.CurrentUserField(editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='core_estruturaorganizativa_cadastrado_por', to=settings.AUTH_USER_MODEL)),
                ('desativado_por', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='core_estruturaorganizativa_desativado_por', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Estruturas organizativa interna existente',
                'verbose_name_plural': 'Das estruturas organizativas internas ao assentamento diga qual existe no assentamento e de quais os membros da família participam',
            },
        ),
        migrations.CreateModel(
            name='Familia',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cadastrado_em', models.DateTimeField(auto_now_add=True, null=True)),
                ('modificado_em', models.DateTimeField(auto_now=True, null=True)),
                ('desativado_em', models.DateTimeField(blank=True, null=True)),
                ('cadastrado_por', cuser.fields.CurrentUserField(editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='core_familia_cadastrado_por', to=settings.AUTH_USER_MODEL)),
                ('desativado_por', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='core_familia_desativado_por', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='FonteAgua',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cadastrado_em', models.DateTimeField(auto_now_add=True, null=True)),
                ('modificado_em', models.DateTimeField(auto_now=True, null=True)),
                ('desativado_em', models.DateTimeField(blank=True, null=True)),
                ('fonte_agua', models.IntegerField(choices=[(1, 'Poço artesiano'), (2, 'Nascente ou vertente'), (3, 'Córregos ou Rios'), (4, 'Capitação de água da chuva'), (5, 'Açude / Barreiro'), (6, 'Poço comum'), (7, 'Depósito coletivo'), (8, 'Rede de água encanada'), (9, 'Outra')], verbose_name='Fonte de água')),
                ('outra', models.CharField(blank=True, max_length=30, null=True, verbose_name='Outra (Especificar)')),
                ('cadastrado_por', cuser.fields.CurrentUserField(editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='core_fonteagua_cadastrado_por', to=settings.AUTH_USER_MODEL)),
                ('desativado_por', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='core_fonteagua_desativado_por', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Abastecimento de água',
                'verbose_name_plural': 'De onde vem a água que abastece a família?',
            },
        ),
        migrations.CreateModel(
            name='LicenciamentoAmbiental',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cadastrado_em', models.DateTimeField(auto_now_add=True, null=True)),
                ('modificado_em', models.DateTimeField(auto_now=True, null=True)),
                ('desativado_em', models.DateTimeField(blank=True, null=True)),
                ('tipo_atividade', models.IntegerField(choices=[(1, 'Agropecuária'), (2, 'Irrigação'), (3, 'Aquicultura'), (4, 'Lazer e Turismo'), (5, 'Outros')], verbose_name='Tipo de atividade')),
                ('outros', models.CharField(blank=True, max_length=50, null=True, verbose_name='Outros (Especificar)')),
                ('cadastrado_por', cuser.fields.CurrentUserField(editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='core_licenciamentoambiental_cadastrado_por', to=settings.AUTH_USER_MODEL)),
                ('desativado_por', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='core_licenciamentoambiental_desativado_por', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Licenciamento ambiental',
                'verbose_name_plural': 'Necessita de licenciamento ambiental para alguma atividade?',
            },
        ),
        migrations.CreateModel(
            name='Lote',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cadastrado_em', models.DateTimeField(auto_now_add=True, null=True)),
                ('modificado_em', models.DateTimeField(auto_now=True, null=True)),
                ('desativado_em', models.DateTimeField(blank=True, null=True)),
                ('codigo_sipra', models.CharField(max_length=15, verbose_name='Código SIPRA')),
                ('area', models.DecimalField(decimal_places=4, max_digits=10, verbose_name='Área (ha)')),
                ('numero', models.IntegerField(verbose_name='Lote N.º')),
                ('entrevistador', models.CharField(max_length=50, verbose_name='Nome do Entrevistador')),
                ('coordenada_x', models.CharField(max_length=30, verbose_name='Coordenada "X"')),
                ('coordenada_y', models.CharField(max_length=30, verbose_name='Coordenada "Y"')),
                ('outra_familia_no_lote', models.IntegerField(choices=[(1, 'Sim'), (0, 'Não')], verbose_name='Existe outra família que mora na parcela/lote?')),
                ('cad_unico', models.IntegerField(choices=[(1, 'Sim'), (0, 'Não')], verbose_name='CAD - Único')),
                ('ocupante_irregular', models.IntegerField(choices=[(1, 'Sim'), (0, 'Não')], verbose_name='Ocupante irregular?')),
                ('ocupante_irregular_tempo', models.CharField(blank=True, max_length=30, null=True, verbose_name='Em caso afirmativo, há quanto tempo?')),
                ('recebe_beneficio_social', models.IntegerField(choices=[(1, 'Sim'), (0, 'Não')], verbose_name='Algum dos membros da família recebe algum tipo de Benefício Social?')),
                ('moradia_assentamento', models.IntegerField(choices=[(1, 'Sim'), (0, 'Não')], verbose_name='Possui moradia no assentamento?')),
                ('tipo_parede_externa', models.IntegerField(blank=True, choices=[(1, 'Alvenaria'), (2, 'Tábuas / Madeira'), (3, 'Tapumes ou chapas de madeira'), (4, 'Folha de zinco'), (5, 'Barro ou adobe'), (6, 'Lona'), (7, 'Outros')], null=True, verbose_name='Qual tipo de parede externa predominante da moradia?')),
                ('tipo_instalacao_eletrica', models.IntegerField(blank=True, choices=[(1, 'Não instalada'), (2, 'Instalada apenas para moradia'), (3, 'Instalada para moradia e outros usos'), (4, 'Outros')], null=True, verbose_name='Instalação de energia elétrica?')),
                ('tipo_instalacao_sanitaria', models.IntegerField(blank=True, choices=[(1, 'Banheiro com fossa séptica'), (2, 'Banheiro com fossa negra'), (3, 'Privada / latrina'), (4, 'Nenhuma')], null=True, verbose_name='Qual é o tipo de instalação sanitária?')),
                ('localizacao_fonte_agua', models.IntegerField(choices=[(1, 'Dentro do seu lote'), (2, 'Fora do seu lote')], verbose_name='Onde está localizada a fonte de água que abastece sua residência?')),
                ('abastecimento_agua_suficiente', models.IntegerField(choices=[(1, 'Sim'), (0, 'Não')], verbose_name='A água que abastece a residência é suficiente?')),
                ('quantas_familias_utilizam_mesma_fonte_agua', models.IntegerField(choices=[(1, 'Nenhuma'), (2, 'Uma outra família, além da sua família'), (3, 'Mais de uma')], verbose_name='Quantas famílias (além da sua) fazem o uso da mesma fonte de água que abastece o seu lote?')),
                ('quantidade_familias_utilizacao_mesma_fonte_agua', models.IntegerField(blank=True, null=True, verbose_name='Mais de uma. Quantas?')),
                ('agua_para_animais_plantio', models.IntegerField(choices=[(1, "Sim, os animais vão até um curso d'água ou represa"), (2, "Sim, a água é puxada de um curso d'água ou represa"), (3, 'Sim, temos um poço exclusivo para os animais'), (4, 'Sim, é a mesma água que vem para a casa'), (5, 'Não há água para animais'), (6, 'Sim, existe água para plantio(s) irrigado(s)'), (7, 'Não existe água para plantio(s) irrigado(s)'), (8, 'Outros')], verbose_name='No lote tem água para os animais / Plantio?')),
                ('agua_para_animais_plantio_outros', models.CharField(blank=True, max_length=50, null=True, verbose_name='Água para animais/plantio (Outros)')),
                ('regularidade_abastecimento_agua', models.IntegerField(choices=[(1, 'Sempre tem água'), (2, 'Falta água às vezes'), (3, 'Falta água com frequência'), (4, 'Nunca tem água')], verbose_name='Regularidade de abastecimento de água')),
                ('tipo_estrada_acesso', models.IntegerField(choices=[(1, 'Asfalto'), (2, 'Estrada cascalhada'), (3, 'Estrada de terra'), (4, 'Trilheiro'), (5, 'Inexistente')], verbose_name='Como é o acesso ao lote?')),
                ('situacao_estrada_acesso', models.IntegerField(choices=[(1, 'Boa'), (2, 'Razoável'), (3, 'Ruim'), (4, 'Péssima')], verbose_name='Situação anual da estrada principal acesso ao lote?')),
                ('situacao_cercado_lote', models.IntegerField(choices=[(1, 'Totalmente cercado, com divisões internas'), (2, 'Totalmente cercado, sem divisões internas'), (3, 'Parcialmente cercado'), (4, 'Não está cercado')], verbose_name='Como está cercado o lote?')),
                ('area_preservacao_permanente', models.IntegerField(choices=[(1, 'Sim'), (0, 'Não')], verbose_name='Existe Área de Preservação Permanente (APP) dentro do seu lote/parcela?')),
                ('area_preservacao_permanente_cercada', models.IntegerField(choices=[(1, 'Sim'), (0, 'Não')], verbose_name='A Área de Preservação Permanente está cercada ou isolada?')),
                ('necessita_licenciamento_ambiental', models.IntegerField(default=0, verbose_name='Necessita de licenciamento ambiental de atividade?')),
                ('necessita_autoriacao_exploracao_florestal_queima_controlada', models.IntegerField(choices=[(1, 'Sim'), (0, 'Não')], verbose_name='Necessita de autorização de exploração florestal e/ou queima controlada?')),
                ('qualidade_servico_saude', models.IntegerField(choices=[(1, 'Ótimo'), (2, 'Bom'), (3, 'Ruim'), (4, 'Péssimo')], verbose_name='Como os moradores consideram o serviço de saúde no assentamento?')),
                ('frequencia_atividade_fisica', models.IntegerField(choices=[(1, 'Diariamente'), (2, 'Duas vezes por semana'), (3, 'Mais de duas vezes por semana'), (4, 'Não pratica')], verbose_name='Com que frequência praticam atividades físicas ou esportes?')),
                ('oferta_transporte_interno', models.IntegerField(choices=[(1, 'Sim'), (0, 'Não')], verbose_name='Para a escola do assentamento há oferta de transporte interno?')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Membro',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cadastrado_em', models.DateTimeField(auto_now_add=True, null=True)),
                ('modificado_em', models.DateTimeField(auto_now=True, null=True)),
                ('desativado_em', models.DateTimeField(blank=True, null=True)),
                ('nome', models.CharField(max_length=100, verbose_name='Nome')),
                ('parentesco', models.IntegerField(choices=[(1, 'Cônjuge'), (2, 'Titular'), (1, 'Irmão(a)'), (1, 'Tio(a)'), (1, 'Primo(a)'), (1, 'Filho(a)'), (1, 'Cunhado(a)'), (8, 'Genro/Nora'), (9, 'Neto(a)')], verbose_name='Parentesco')),
                ('idade', models.IntegerField(verbose_name='Idade')),
                ('escolaridade', models.IntegerField(choices=[(1, 'Não alfabetizado'), (2, '1º ao 4º ano'), (3, '5º ao 9º ano'), (4, 'Fundamental completo'), (5, 'EJA - Educação de Jovens e Adultos'), (6, 'Médio incompleto'), (7, 'Médio completo'), (8, 'Superior incompleto'), (9, 'Superior completo'), (10, 'Pós Graduação incompleto'), (11, 'Pós Graduação completo')], verbose_name='Escolaridade')),
                ('estuda', models.IntegerField(choices=[(1, 'Sim'), (0, 'Não')], verbose_name='Estuda?')),
                ('cpf', models.CharField(max_length=11, unique=True, verbose_name='CPF')),
                ('trabalho_antes_do_lote', models.IntegerField(blank=True, choices=[(1, 'Sempre trabalhou no campo'), (2, 'Trabalhou parte do tempo na cidade'), (3, 'Nunca trabalhou no campo antes')], null=True, verbose_name='Antes de entrar no lote, trabalhava onde?')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PraticaConservacionista',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cadastrado_em', models.DateTimeField(auto_now_add=True, null=True)),
                ('modificado_em', models.DateTimeField(auto_now=True, null=True)),
                ('desativado_em', models.DateTimeField(blank=True, null=True)),
                ('tipo_pratica', models.IntegerField(choices=[(10, 'Adubação verde'), (20, 'Curvas em nível'), (30, 'Rotação/consórcio de culturas'), (40, 'Adubação orgânica'), (50, 'Cordões de vegetação em nível'), (60, 'Controle alternativo de pragas e doenças'), (70, 'Agrofloresta'), (80, 'Plantios de árvores para proteção de mananciais / áreas degradadas')], verbose_name='Prática Conservacionista')),
                ('cadastrado_por', cuser.fields.CurrentUserField(editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='core_praticaconservacionista_cadastrado_por', to=settings.AUTH_USER_MODEL)),
                ('desativado_por', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='core_praticaconservacionista_desativado_por', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Prática conservacionista praticada',
                'verbose_name_plural': 'Quais são as práticas conservacionistas praticadas na propriedade?',
            },
        ),
        migrations.CreateModel(
            name='ProblemaAmbiental',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cadastrado_em', models.DateTimeField(auto_now_add=True, null=True)),
                ('modificado_em', models.DateTimeField(auto_now=True, null=True)),
                ('desativado_em', models.DateTimeField(blank=True, null=True)),
                ('tipo_problema', models.IntegerField(choices=[(1, 'Erosão (laminar, sulco, voçoroca)'), (2, 'Compactação do solo'), (3, 'Contaminação por uso de  agrotóxicos/destinação inadequada de embalagens'), (4, 'Exposição de lixo de forma inadequada (a céu aberto)'), (5, 'Queima de lixo'), (6, 'Destinação inadequada de pilhas/baterias/lixo eletrônico'), (7, 'Poluição/contaminação nascente e/ou rios/córregos'), (8, 'Assoreamento de rio/córrego'), (9, 'Queimadas'), (10, 'Desmatamento'), (11, 'Outros')], verbose_name='Tipo de problema')),
                ('outros', models.CharField(blank=True, max_length=50, null=True, verbose_name='Outros (Especificar)')),
                ('cadastrado_por', cuser.fields.CurrentUserField(editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='core_problemaambiental_cadastrado_por', to=settings.AUTH_USER_MODEL)),
                ('desativado_por', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='core_problemaambiental_desativado_por', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Problema ambiental',
                'verbose_name_plural': 'Quais são os problemas ambientais existentes no lote?',
            },
        ),
        migrations.CreateModel(
            name='ProducaoAnimal',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cadastrado_em', models.DateTimeField(auto_now_add=True, null=True)),
                ('modificado_em', models.DateTimeField(auto_now=True, null=True)),
                ('desativado_em', models.DateTimeField(blank=True, null=True)),
                ('classificacao', models.IntegerField(verbose_name='Classificação')),
                ('tipo_criacao', models.IntegerField(choices=[(1, 'Gado Leiteiro'), (2, 'Gado de Corte')], verbose_name='Tipo de criação')),
                ('especificacao', models.IntegerField(choices=[(10, 'Touros'), (20, 'Vacas'), (30, 'Novilhas(os) + de 02 anos'), (40, 'Novilhas(os) + de 01 ano'), (50, 'Bezerras(os)'), (60, 'Boi'), (70, 'Frango de corte caipira'), (80, 'Galinha caipira (somente frangos(as) e adultos)'), (90, 'Suínos'), (100, 'Ovinos'), (110, 'Equinos / Muares'), (120, 'Caprinos')], verbose_name='Especificação')),
                ('quantidade_cabecas', models.IntegerField(verbose_name='Nº de Cabeça(s)')),
                ('valor_cabeca', models.DecimalField(decimal_places=2, max_digits=7, verbose_name='R$/Cabeça')),
                ('cadastrado_por', cuser.fields.CurrentUserField(editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='core_producaoanimal_cadastrado_por', to=settings.AUTH_USER_MODEL)),
                ('desativado_por', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='core_producaoanimal_desativado_por', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ProducaoFlorestal',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cadastrado_em', models.DateTimeField(auto_now_add=True, null=True)),
                ('modificado_em', models.DateTimeField(auto_now=True, null=True)),
                ('desativado_em', models.DateTimeField(blank=True, null=True)),
                ('especificacao', models.IntegerField(choices=[(1, 'Eucalipto(m³)'), (2, 'Teca(m³)'), (3, 'Seringueira(Kg/látex)'), (4, 'Seringueira(m³/Madeira)'), (5, 'Outros')], verbose_name='Especificação')),
                ('outros', models.CharField(blank=True, max_length=30, null=True, verbose_name='Outros')),
                ('quantidade_produzida_ano', models.IntegerField(verbose_name='Quantidade Colhida / Ano - Fruto(s)')),
                ('area_plantada', models.DecimalField(decimal_places=4, max_digits=10, verbose_name='Área plantada (ha)')),
                ('valor', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='R$/Unidade colhida')),
                ('cadastrado_por', cuser.fields.CurrentUserField(editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='core_producaoflorestal_cadastrado_por', to=settings.AUTH_USER_MODEL)),
                ('desativado_por', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='core_producaoflorestal_desativado_por', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Produção Florestal',
                'verbose_name_plural': 'Produções Florestais',
            },
        ),
        migrations.CreateModel(
            name='ProducaoVegetal',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cadastrado_em', models.DateTimeField(auto_now_add=True, null=True)),
                ('modificado_em', models.DateTimeField(auto_now=True, null=True)),
                ('desativado_em', models.DateTimeField(blank=True, null=True)),
                ('classificacao', models.IntegerField(verbose_name='Classificação')),
                ('tipo_producao', models.IntegerField(choices=[(1, 'Amendoim'), (2, 'Arroz'), (3, 'Batata-doce'), (4, 'Cana-de-Açúcar'), (5, 'Feijão'), (6, 'Mamona'), (7, 'Mandioca de / Farinha'), (8, 'Mandioca de / Mesa'), (9, 'Milho'), (10, 'Alface'), (11, 'Cebolinha'), (12, 'Couve'), (13, 'Coentro'), (14, 'Couve-flor'), (15, 'Rabanete'), (16, 'Rúcula'), (17, 'Salsa'), (18, 'Abóbora'), (19, 'Maxixe'), (20, 'Melancia'), (21, 'Melão'), (22, 'Pepino'), (23, 'Pimentão'), (24, 'Quiabo'), (25, 'Tomate'), (26, 'Abacate'), (27, 'Acerola'), (28, 'Banana'), (29, 'Cajú'), (30, 'Côco'), (31, 'Goiaba'), (32, 'Jabuticaba'), (33, 'Jaca'), (34, 'Laranja'), (35, 'Lima'), (36, 'Limão'), (37, 'Manga'), (38, 'Maracujá'), (39, 'Tamarindo'), (40, 'Tangerina'), (41, 'Uva'), (99, 'Outros')], verbose_name='Tipo de produção')),
                ('tipo_producao_outros', models.CharField(blank=True, max_length=30, null=True, verbose_name='Tipo de produção (Outros)')),
                ('area_plantada', models.DecimalField(decimal_places=4, max_digits=10, verbose_name='Área plantada')),
                ('medida_area_plantada', models.IntegerField(choices=[(1, 'ha'), (2, 'm2')], verbose_name='Medida da área plantada')),
                ('producao_consumo', models.FloatField(blank=True, null=True, verbose_name='Produção (Consumo)')),
                ('producao_comercio', models.FloatField(blank=True, null=True, verbose_name='Produção (Comércio)')),
                ('producao_unidade_medida', models.IntegerField(blank=True, choices=[(1, 'Kg'), (2, 'un')], null=True, verbose_name='Unidade de medida da produção')),
                ('valor', models.DecimalField(blank=True, decimal_places=4, max_digits=10, null=True, verbose_name='Valor (R$)')),
                ('irrigacao', models.IntegerField(blank=True, choices=[(1, 'Sim'), (0, 'Não')], null=True, verbose_name='Plantio irrigado?')),
                ('area_irrigada', models.DecimalField(blank=True, decimal_places=4, max_digits=10, null=True, verbose_name='Área irrigada')),
                ('medida_area_irrigada', models.IntegerField(blank=True, choices=[(1, 'ha'), (2, 'm2')], null=True, verbose_name='Medida da área irrigada')),
                ('tipo_irrigacao', models.IntegerField(blank=True, choices=[(1, 'Aspersão'), (2, 'Sulco'), (3, 'Gotejamento'), (4, 'Outros')], null=True, verbose_name='Tipo de irrigação')),
                ('cadastrado_por', cuser.fields.CurrentUserField(editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='core_producaovegetal_cadastrado_por', to=settings.AUTH_USER_MODEL)),
                ('desativado_por', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='core_producaovegetal_desativado_por', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Produto',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cadastrado_em', models.DateTimeField(auto_now_add=True, null=True)),
                ('modificado_em', models.DateTimeField(auto_now=True, null=True)),
                ('desativado_em', models.DateTimeField(blank=True, null=True)),
                ('classificacao', models.IntegerField(verbose_name='Classificação')),
                ('especificacao', models.IntegerField(choices=[(1, 'Carne(Kg)'), (2, 'Leite(L)'), (3, 'Mel(Kg)'), (4, 'Ovos(Dz)'), (5, 'Peixes(Kg)'), (6, 'Banha(Kg)'), (7, 'Conservas(Un)'), (8, 'Doces(Un)'), (9, 'Farinha de Mandioca(Kg)'), (10, 'Linguiça(Kg)'), (11, 'Povilho de Mandioca(Kg)'), (12, 'Queijo(Kg)'), (13, 'Rapadura(Kg)'), (14, 'Outros')], verbose_name='Especificação')),
                ('outros', models.CharField(blank=True, max_length=30, null=True, verbose_name='Outros (Especificar)')),
                ('producao_consumo', models.IntegerField(verbose_name='Produção (Consumo)')),
                ('producao_comercio', models.IntegerField(verbose_name='Produção (Comércio)')),
                ('valor', models.DecimalField(decimal_places=2, max_digits=7, verbose_name='Valor R$/Unidade')),
                ('cadastrado_por', cuser.fields.CurrentUserField(editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='core_produto_cadastrado_por', to=settings.AUTH_USER_MODEL)),
                ('desativado_por', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='core_produto_desativado_por', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ProgramaSaude',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cadastrado_em', models.DateTimeField(auto_now_add=True, null=True)),
                ('modificado_em', models.DateTimeField(auto_now=True, null=True)),
                ('desativado_em', models.DateTimeField(blank=True, null=True)),
                ('programa_saude', models.IntegerField(choices=[(10, 'Programa Saúde da Família - PSF'), (20, 'Agentes Comunitários de Saúde'), (30, 'Atendimento médico'), (40, 'Atendimento odontológico'), (50, 'Campanha de vacinação'), (60, 'Saúde da Mulher')], verbose_name='Programa/Tipo de atendimento à saúde')),
                ('cadastrado_por', cuser.fields.CurrentUserField(editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='core_programasaude_cadastrado_por', to=settings.AUTH_USER_MODEL)),
                ('desativado_por', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='core_programasaude_desativado_por', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Programa ou tipo de atendimento à saúde disponibilizado no P.A',
                'verbose_name_plural': 'Quais programas ou tipos de atendimento à saúde são disponibilizados no P.A?',
            },
        ),
        migrations.CreateModel(
            name='ProjetoAssentamento',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cadastrado_em', models.DateTimeField(auto_now_add=True, null=True)),
                ('modificado_em', models.DateTimeField(auto_now=True, null=True)),
                ('desativado_em', models.DateTimeField(blank=True, null=True)),
                ('contrato', models.IntegerField(choices=[(10, '10.000/2015'), (11, '11.000/2015'), (18, '18.000/2015')], verbose_name='Contrato')),
                ('codigo', models.CharField(max_length=15, verbose_name='Código do PA')),
                ('nome', models.CharField(max_length=50, verbose_name='Nome do PA')),
                ('municipio', models.CharField(max_length=100, verbose_name='Município')),
                ('data_criacao', models.DateField(verbose_name='Data de Criação')),
                ('cadastrado_por', cuser.fields.CurrentUserField(editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='core_projetoassentamento_cadastrado_por', to=settings.AUTH_USER_MODEL)),
                ('desativado_por', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='core_projetoassentamento_desativado_por', to=settings.AUTH_USER_MODEL)),
                ('modificado_por', cuser.fields.CurrentUserField(editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='core_projetoassentamento_modificado_por', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Projeto de Assentamento',
                'verbose_name_plural': 'Projetos de Assentamento',
                'ordering': ['codigo'],
            },
        ),
        migrations.CreateModel(
            name='TratamentoAgua',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cadastrado_em', models.DateTimeField(auto_now_add=True, null=True)),
                ('modificado_em', models.DateTimeField(auto_now=True, null=True)),
                ('desativado_em', models.DateTimeField(blank=True, null=True)),
                ('tratamento_agua', models.IntegerField(choices=[(1, 'Não há tratamento'), (2, 'Cloração'), (3, 'Fervura'), (4, 'Filtragem'), (5, 'Dessalinização'), (6, 'Outra')], verbose_name='Forma de tratamento')),
                ('cadastrado_por', cuser.fields.CurrentUserField(editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='core_tratamentoagua_cadastrado_por', to=settings.AUTH_USER_MODEL)),
                ('desativado_por', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='core_tratamentoagua_desativado_por', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Tratamento da água',
                'verbose_name_plural': 'Qual a forma tratamento da água para consumo?',
            },
        ),
        migrations.CreateModel(
            name='UsoFrequente',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cadastrado_em', models.DateTimeField(auto_now_add=True, null=True)),
                ('modificado_em', models.DateTimeField(auto_now=True, null=True)),
                ('desativado_em', models.DateTimeField(blank=True, null=True)),
                ('uso_frequente', models.IntegerField(choices=[(1, 'Bebidas alcoólicas'), (2, 'Cigarros'), (3, 'Remédios de alto custo'), (4, 'Outros')], verbose_name='Selecione')),
                ('outros', models.CharField(blank=True, max_length=50, null=True, verbose_name='Outros (Especificar)')),
                ('cadastrado_por', cuser.fields.CurrentUserField(editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='core_usofrequente_cadastrado_por', to=settings.AUTH_USER_MODEL)),
                ('desativado_por', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='core_usofrequente_desativado_por', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Faz o uso frequente de',
                'verbose_name_plural': 'Quais os tipos de usos frequentes?',
            },
        ),
        migrations.CreateModel(
            name='AtendimentoSaude',
            fields=[
                ('cadastrado_em', models.DateTimeField(auto_now_add=True, null=True)),
                ('modificado_em', models.DateTimeField(auto_now=True, null=True)),
                ('desativado_em', models.DateTimeField(blank=True, null=True)),
                ('lote', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='atendimentosSaude', serialize=False, to='core.Lote', verbose_name='Lote')),
                ('hospital', models.IntegerField(choices=[(1, 'P.A'), (2, 'Cidade')], verbose_name='Hospital')),
                ('posto_saude', models.IntegerField(choices=[(1, 'P.A'), (2, 'Cidade')], verbose_name='Posto de saúde')),
                ('farmacia', models.IntegerField(choices=[(1, 'P.A'), (2, 'Cidade')], verbose_name='Farmácia')),
                ('outros', models.IntegerField(blank=True, choices=[(1, 'P.A'), (2, 'Cidade')], null=True, verbose_name='Outros')),
                ('outros_especificacao', models.CharField(blank=True, max_length=50, null=True, verbose_name='Outros (Especificar)')),
                ('cadastrado_por', cuser.fields.CurrentUserField(editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='core_atendimentosaude_cadastrado_por', to=settings.AUTH_USER_MODEL)),
                ('desativado_por', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='core_atendimentosaude_desativado_por', to=settings.AUTH_USER_MODEL)),
                ('modificado_por', cuser.fields.CurrentUserField(editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='core_atendimentosaude_modificado_por', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Local de atendimento à saúde',
                'verbose_name_plural': 'Onde é feito o atendimento à saúde para as famílias do assentamento?',
            },
        ),
        migrations.CreateModel(
            name='DestinoLixoDomestico',
            fields=[
                ('cadastrado_em', models.DateTimeField(auto_now_add=True, null=True)),
                ('modificado_em', models.DateTimeField(auto_now=True, null=True)),
                ('desativado_em', models.DateTimeField(blank=True, null=True)),
                ('lote', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='destinosLixoDomestico', serialize=False, to='core.Lote', verbose_name='Lote')),
                ('destino', models.IntegerField(choices=[(10, 'Espalhado no lote'), (20, 'Queima'), (30, 'Enterra'), (40, "Joga nos cursos d'água"), (50, 'Recicla/reaproveita lixo inorgânico'), (60, 'Deposita a céu aberto no lote')], verbose_name='Destino')),
                ('cadastrado_por', cuser.fields.CurrentUserField(editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='core_destinolixodomestico_cadastrado_por', to=settings.AUTH_USER_MODEL)),
                ('desativado_por', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='core_destinolixodomestico_desativado_por', to=settings.AUTH_USER_MODEL)),
                ('modificado_por', cuser.fields.CurrentUserField(editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='core_destinolixodomestico_modificado_por', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Destino do lixo doméstico não orgânico?',
                'verbose_name_plural': 'Qual é o destino do lixo doméstico não orgânico?',
            },
        ),
        migrations.CreateModel(
            name='DestinoMaterialOrganico',
            fields=[
                ('cadastrado_em', models.DateTimeField(auto_now_add=True, null=True)),
                ('modificado_em', models.DateTimeField(auto_now=True, null=True)),
                ('desativado_em', models.DateTimeField(blank=True, null=True)),
                ('lote', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='destinosMaterialOrganico', serialize=False, to='core.Lote', verbose_name='Lote')),
                ('destino', models.IntegerField(choices=[(10, 'Uso para alimentação de animais'), (20, 'Faz compostagem'), (30, 'Enterra junto com inorgânico'), (40, 'Deposita a céu aberto no lote')], verbose_name='Destino')),
                ('cadastrado_por', cuser.fields.CurrentUserField(editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='core_destinomaterialorganico_cadastrado_por', to=settings.AUTH_USER_MODEL)),
                ('desativado_por', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='core_destinomaterialorganico_desativado_por', to=settings.AUTH_USER_MODEL)),
                ('modificado_por', cuser.fields.CurrentUserField(editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='core_destinomaterialorganico_modificado_por', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Destino do material orgânico?',
                'verbose_name_plural': 'Qual o destino do material orgânico?',
            },
        ),
        migrations.CreateModel(
            name='NaoPossuiDocumento',
            fields=[
                ('cadastrado_em', models.DateTimeField(auto_now_add=True, null=True)),
                ('modificado_em', models.DateTimeField(auto_now=True, null=True)),
                ('desativado_em', models.DateTimeField(blank=True, null=True)),
                ('lote', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='nao_possui_documento', serialize=False, to='core.Lote', verbose_name='Lote')),
                ('certidao_nascimento', models.IntegerField(verbose_name='Certidão de Nascimento')),
                ('identidade', models.IntegerField(verbose_name='Identidade (RG) - a partir de 12 anos')),
                ('cpf', models.IntegerField(verbose_name='Cadastro de Pessoa Física (CPF)')),
                ('carteira_de_trabalho', models.IntegerField(verbose_name='Carteira de Trabalho (CTPS) - a partir de 14 anos')),
                ('certidao_de_casamento_ou_uniao_estavel', models.IntegerField(verbose_name='Certidão de Casamento ou União Estável')),
                ('cadastrado_por', cuser.fields.CurrentUserField(editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='core_naopossuidocumento_cadastrado_por', to=settings.AUTH_USER_MODEL)),
                ('desativado_por', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='core_naopossuidocumento_desativado_por', to=settings.AUTH_USER_MODEL)),
                ('modificado_por', cuser.fields.CurrentUserField(editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='core_naopossuidocumento_modificado_por', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Com relação à documentação, quantas pessoas NÃO POSSUEM os documentos relacionados abaixo?',
                'verbose_name_plural': 'Com relação à documentação, quantas pessoas NÃO POSSUEM os documentos relacionados abaixo?',
            },
        ),
        migrations.CreateModel(
            name='NivelTecnologicoProducaoAnimal',
            fields=[
                ('cadastrado_em', models.DateTimeField(auto_now_add=True, null=True)),
                ('modificado_em', models.DateTimeField(auto_now=True, null=True)),
                ('desativado_em', models.DateTimeField(blank=True, null=True)),
                ('lote', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='nivelTecnologicoProducaoAnimal', serialize=False, to='core.Lote', verbose_name='Lote')),
                ('possui_capineira', models.IntegerField(choices=[(1, 'Sim'), (0, 'Não')], verbose_name='Possui Capineira?')),
                ('tipo_capineira', models.IntegerField(choices=[(10, 'Cana'), (20, 'Napier'), (99, 'Não se aplica')], verbose_name='Tipo de Capineira')),
                ('area_capineira', models.DecimalField(blank=True, decimal_places=4, max_digits=10, null=True, verbose_name='Área da capineira (ha)')),
                ('possui_pastagem_rotacionada', models.IntegerField(choices=[(1, 'Sim'), (0, 'Não')], verbose_name='Possui Pastagem em Pastejo Rotacionado?')),
                ('area_pastagem_rotacionada', models.DecimalField(blank=True, decimal_places=4, max_digits=10, null=True, verbose_name='Área Pastejo Rotacionado (ha)')),
                ('patrica_insemincacao', models.IntegerField(choices=[(1, 'Sim'), (0, 'Não')], verbose_name='Pratica inseminação artificial no rebanho leiteiro?')),
                ('cadastrado_por', cuser.fields.CurrentUserField(editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='core_niveltecnologicoproducaoanimal_cadastrado_por', to=settings.AUTH_USER_MODEL)),
                ('desativado_por', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='core_niveltecnologicoproducaoanimal_desativado_por', to=settings.AUTH_USER_MODEL)),
                ('modificado_por', cuser.fields.CurrentUserField(editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='core_niveltecnologicoproducaoanimal_modificado_por', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Sobre o Nível Tecnológico da Produção Animal',
                'verbose_name_plural': 'Sobre o Nível Tecnológico da Produção Animal',
            },
        ),
        migrations.CreateModel(
            name='OpcaoEnsinoUtilizada',
            fields=[
                ('cadastrado_em', models.DateTimeField(auto_now_add=True, null=True)),
                ('modificado_em', models.DateTimeField(auto_now=True, null=True)),
                ('desativado_em', models.DateTimeField(blank=True, null=True)),
                ('membro', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='opcao_ensino_utilizada', serialize=False, to='core.Membro', verbose_name='Membro')),
                ('opcao_ensino', models.IntegerField(choices=[(1, 'Frequenta escola em outro assentamento'), (2, 'Frequenta escola na cidade mais próxima'), (3, 'Deixa de frequentar a escola'), (4, 'Outros')], verbose_name='Selecione')),
                ('outros', models.CharField(blank=True, max_length=50, null=True, verbose_name='Outros (Especificar)')),
                ('distancia_percorrida', models.IntegerField(verbose_name='Distância até a escola (Km)')),
                ('oferta_de_transporte', models.IntegerField(choices=[(1, 'Sim'), (0, 'Não')], verbose_name='Há oferta de transporte para a escola?')),
                ('cadastrado_por', cuser.fields.CurrentUserField(editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='core_opcaoensinoutilizada_cadastrado_por', to=settings.AUTH_USER_MODEL)),
                ('desativado_por', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='core_opcaoensinoutilizada_desativado_por', to=settings.AUTH_USER_MODEL)),
                ('modificado_por', cuser.fields.CurrentUserField(editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='core_opcaoensinoutilizada_modificado_por', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Opção de ensino utilizada:',
                'verbose_name_plural': 'Quais as opções de ensino utilizadas pelo membro?',
            },
        ),
        migrations.CreateModel(
            name='RendaTrabalhoForaLote',
            fields=[
                ('cadastrado_em', models.DateTimeField(auto_now_add=True, null=True)),
                ('modificado_em', models.DateTimeField(auto_now=True, null=True)),
                ('desativado_em', models.DateTimeField(blank=True, null=True)),
                ('membro', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='renda_trabalho_fora_lote', serialize=False, to='core.Membro', verbose_name='Membro')),
                ('quantidade_dias_ano', models.IntegerField(verbose_name='Quantidade de dias/ano trabalha fora do lote')),
                ('valor', models.DecimalField(decimal_places=2, max_digits=7, verbose_name='Valor da Diária (R$/dia)')),
                ('cadastrado_por', cuser.fields.CurrentUserField(editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='core_rendatrabalhoforalote_cadastrado_por', to=settings.AUTH_USER_MODEL)),
                ('desativado_por', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='core_rendatrabalhoforalote_desativado_por', to=settings.AUTH_USER_MODEL)),
                ('modificado_por', cuser.fields.CurrentUserField(editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='core_rendatrabalhoforalote_modificado_por', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Renda de trabalho fora do lote',
                'verbose_name_plural': 'Sobre a renda de trabalho fora do lote',
            },
        ),
        migrations.AddField(
            model_name='usofrequente',
            name='membro',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='usos_frequentes', to='core.Membro', verbose_name='Membro'),
        ),
        migrations.AddField(
            model_name='usofrequente',
            name='modificado_por',
            field=cuser.fields.CurrentUserField(editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='core_usofrequente_modificado_por', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='tratamentoagua',
            name='lote',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tratamentosAgua', to='core.Lote', verbose_name='Lote'),
        ),
        migrations.AddField(
            model_name='tratamentoagua',
            name='modificado_por',
            field=cuser.fields.CurrentUserField(editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='core_tratamentoagua_modificado_por', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='programasaude',
            name='lote',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='programasSaude', to='core.Lote', verbose_name='Lote'),
        ),
        migrations.AddField(
            model_name='programasaude',
            name='modificado_por',
            field=cuser.fields.CurrentUserField(editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='core_programasaude_modificado_por', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='produto',
            name='lote',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='produtosOrigemAnimal', to='core.Lote', verbose_name='Lote'),
        ),
        migrations.AddField(
            model_name='produto',
            name='modificado_por',
            field=cuser.fields.CurrentUserField(editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='core_produto_modificado_por', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='producaovegetal',
            name='lote',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='producoesVegetais', to='core.Lote', verbose_name='Lote'),
        ),
        migrations.AddField(
            model_name='producaovegetal',
            name='modificado_por',
            field=cuser.fields.CurrentUserField(editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='core_producaovegetal_modificado_por', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='producaoflorestal',
            name='lote',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='producoesFlorestais', to='core.Lote', verbose_name='Lote'),
        ),
        migrations.AddField(
            model_name='producaoflorestal',
            name='modificado_por',
            field=cuser.fields.CurrentUserField(editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='core_producaoflorestal_modificado_por', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='producaoanimal',
            name='lote',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='producoesAnimais', to='core.Lote', verbose_name='Lote'),
        ),
        migrations.AddField(
            model_name='producaoanimal',
            name='modificado_por',
            field=cuser.fields.CurrentUserField(editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='core_producaoanimal_modificado_por', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='problemaambiental',
            name='lote',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='problemasAmbientais', to='core.Lote', verbose_name='Lote'),
        ),
        migrations.AddField(
            model_name='problemaambiental',
            name='modificado_por',
            field=cuser.fields.CurrentUserField(editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='core_problemaambiental_modificado_por', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='praticaconservacionista',
            name='lote',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='praticasConservacionistas', to='core.Lote', verbose_name='Lote'),
        ),
        migrations.AddField(
            model_name='praticaconservacionista',
            name='modificado_por',
            field=cuser.fields.CurrentUserField(editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='core_praticaconservacionista_modificado_por', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='membro',
            name='cadastrado_por',
            field=cuser.fields.CurrentUserField(editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='core_membro_cadastrado_por', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='membro',
            name='desativado_por',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='core_membro_desativado_por', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='membro',
            name='familia',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='membros', to='core.Familia', verbose_name='Familia'),
        ),
        migrations.AddField(
            model_name='membro',
            name='modificado_por',
            field=cuser.fields.CurrentUserField(editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='core_membro_modificado_por', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='lote',
            name='cadastrado_por',
            field=cuser.fields.CurrentUserField(editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='core_lote_cadastrado_por', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='lote',
            name='desativado_por',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='core_lote_desativado_por', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='lote',
            name='modificado_por',
            field=cuser.fields.CurrentUserField(editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='core_lote_modificado_por', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='lote',
            name='projeto_assentamento',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lotes', to='core.ProjetoAssentamento', verbose_name='PA'),
        ),
        migrations.AddField(
            model_name='licenciamentoambiental',
            name='lote',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='licenciamentosAmbientais', to='core.Lote', verbose_name='Lote'),
        ),
        migrations.AddField(
            model_name='licenciamentoambiental',
            name='modificado_por',
            field=cuser.fields.CurrentUserField(editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='core_licenciamentoambiental_modificado_por', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='fonteagua',
            name='lote',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='fontesAgua', to='core.Lote', verbose_name='Lote'),
        ),
        migrations.AddField(
            model_name='fonteagua',
            name='modificado_por',
            field=cuser.fields.CurrentUserField(editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='core_fonteagua_modificado_por', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='familia',
            name='lote',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='familias', to='core.Lote', verbose_name='Lote'),
        ),
        migrations.AddField(
            model_name='familia',
            name='modificado_por',
            field=cuser.fields.CurrentUserField(editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='core_familia_modificado_por', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='estruturaorganizativa',
            name='lote',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='estruturasOrganizativas', to='core.Lote', verbose_name='Lote'),
        ),
        migrations.AddField(
            model_name='estruturaorganizativa',
            name='modificado_por',
            field=cuser.fields.CurrentUserField(editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='core_estruturaorganizativa_modificado_por', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='estabelecimentoensino',
            name='lote',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='estabelecimentosEnsino', to='core.Lote', verbose_name='Lote'),
        ),
        migrations.AddField(
            model_name='estabelecimentoensino',
            name='modificado_por',
            field=cuser.fields.CurrentUserField(editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='core_estabelecimentoensino_modificado_por', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='espacodisponivel',
            name='lote',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='espacosDisponiveis', to='core.Lote', verbose_name='Lote'),
        ),
        migrations.AddField(
            model_name='espacodisponivel',
            name='modificado_por',
            field=cuser.fields.CurrentUserField(editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='core_espacodisponivel_modificado_por', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='documentolote',
            name='lote',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='documentos', to='core.Lote', verbose_name='Lote'),
        ),
        migrations.AddField(
            model_name='documentolote',
            name='modificado_por',
            field=cuser.fields.CurrentUserField(editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='core_documentolote_modificado_por', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='descarteanimal',
            name='lote',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='descartesAnimais', to='core.Lote', verbose_name='Lote'),
        ),
        migrations.AddField(
            model_name='descarteanimal',
            name='modificado_por',
            field=cuser.fields.CurrentUserField(editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='core_descarteanimal_modificado_por', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='creditobancario',
            name='lote',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='creditosBancarios', to='core.Lote', verbose_name='Lote'),
        ),
        migrations.AddField(
            model_name='creditobancario',
            name='modificado_por',
            field=cuser.fields.CurrentUserField(editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='core_creditobancario_modificado_por', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='contato',
            name='lote',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='contatos', to='core.Lote', verbose_name='Lote'),
        ),
        migrations.AddField(
            model_name='contato',
            name='modificado_por',
            field=cuser.fields.CurrentUserField(editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='core_contato_modificado_por', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='construcaolote',
            name='lote',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='construcoesLote', to='core.Lote', verbose_name='Lote'),
        ),
        migrations.AddField(
            model_name='construcaolote',
            name='modificado_por',
            field=cuser.fields.CurrentUserField(editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='core_construcaolote_modificado_por', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='beneficiosocial',
            name='lote',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='beneficios', to='core.Lote', verbose_name='Lote'),
        ),
        migrations.AddField(
            model_name='beneficiosocial',
            name='modificado_por',
            field=cuser.fields.CurrentUserField(editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='core_beneficiosocial_modificado_por', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='bemprodutivo',
            name='lote',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bensProdutivos', to='core.Lote', verbose_name='Lote'),
        ),
        migrations.AddField(
            model_name='bemprodutivo',
            name='modificado_por',
            field=cuser.fields.CurrentUserField(editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='core_bemprodutivo_modificado_por', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='autodeclaracaoetnia',
            name='lote',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='autoDeclaracoes', to='core.Lote', verbose_name='Lote'),
        ),
        migrations.AddField(
            model_name='autodeclaracaoetnia',
            name='modificado_por',
            field=cuser.fields.CurrentUserField(editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='core_autodeclaracaoetnia_modificado_por', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='atividadefisica',
            name='lote',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='atividadesFisicas', to='core.Lote', verbose_name='Lote'),
        ),
        migrations.AddField(
            model_name='atividadefisica',
            name='modificado_por',
            field=cuser.fields.CurrentUserField(editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='core_atividadefisica_modificado_por', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='atividadeextrativista',
            name='lote',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='atividadesExtrativistas', to='core.Lote', verbose_name='Lote'),
        ),
        migrations.AddField(
            model_name='atividadeextrativista',
            name='modificado_por',
            field=cuser.fields.CurrentUserField(editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='core_atividadeextrativista_modificado_por', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='aplicacaocredito',
            name='lote',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='aplicacoesCredito', to='core.Lote', verbose_name='Lote'),
        ),
        migrations.AddField(
            model_name='aplicacaocredito',
            name='modificado_por',
            field=cuser.fields.CurrentUserField(editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='core_aplicacaocredito_modificado_por', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='Bovinocultura',
            fields=[
            ],
            options={
                'verbose_name': 'Produção Animal - Bovinocultura (Efetivo Atual)',
                'verbose_name_plural': 'Produção Animal - Bovinocultura (Efetivo Atual)',
                'proxy': True,
                'indexes': [],
            },
            bases=('core.producaoanimal',),
        ),
        migrations.CreateModel(
            name='BovinoculturaCorte',
            fields=[
            ],
            options={
                'verbose_name': 'Descarte Animal - Bovinocultura de Corte',
                'verbose_name_plural': 'Descarte Animal - Bovinocultura de Corte',
                'proxy': True,
                'indexes': [],
            },
            bases=('core.descarteanimal',),
        ),
        migrations.CreateModel(
            name='BovinoculturaLeiteira',
            fields=[
            ],
            options={
                'verbose_name': 'Descarte Animal - Bovinocultura Leiteira',
                'verbose_name_plural': 'Descarte Animal - Bovinocultura Leiteira',
                'proxy': True,
                'indexes': [],
            },
            bases=('core.descarteanimal',),
        ),
        migrations.CreateModel(
            name='Cultura',
            fields=[
            ],
            options={
                'verbose_name': 'Produção Vegetal - Cultura',
                'verbose_name_plural': 'Produções Vegetais - Culturas',
                'proxy': True,
                'indexes': [],
            },
            bases=('core.producaovegetal',),
        ),
        migrations.CreateModel(
            name='Fruticultura',
            fields=[
            ],
            options={
                'verbose_name': 'Produção Vegetal - Fruticultura',
                'verbose_name_plural': 'Produções Vegetais - Fruticulturas',
                'proxy': True,
                'indexes': [],
            },
            bases=('core.producaovegetal',),
        ),
        migrations.CreateModel(
            name='Olericultura',
            fields=[
            ],
            options={
                'verbose_name': 'Produção Vegetal - Olericultura',
                'verbose_name_plural': 'Produções Vegetais - Olericulturas',
                'proxy': True,
                'indexes': [],
            },
            bases=('core.producaovegetal',),
        ),
        migrations.CreateModel(
            name='OrigemAnimal',
            fields=[
            ],
            options={
                'verbose_name': 'Produto de origem animal produzido',
                'verbose_name_plural': 'Sobre os produtos de origem animal produzidos no último ano agrícola',
                'proxy': True,
                'indexes': [],
            },
            bases=('core.produto',),
        ),
        migrations.CreateModel(
            name='OutraCriacao',
            fields=[
            ],
            options={
                'verbose_name': 'Produção Animal - Outras Criações Animais (Efetivo Atual)',
                'verbose_name_plural': 'Produção Animal - Outras Criações Animais (Efetivo Atual)',
                'proxy': True,
                'indexes': [],
            },
            bases=('core.producaoanimal',),
        ),
        migrations.CreateModel(
            name='ProcessadoBeneficiado',
            fields=[
            ],
            options={
                'verbose_name': 'Produto processado ou beneficiado',
                'verbose_name_plural': 'Sobre os produtos processados ou beneficiados no estabelecimento, no último ano agrícola (agroindústria)',
                'proxy': True,
                'indexes': [],
            },
            bases=('core.produto',),
        ),
    ]

# Generated by Django 2.0.5 on 2018-07-27 16:30

from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('core', '0002_auto_20180726_1243'),
    ]

    operations = [
        migrations.AlterField(
            model_name='aplicacaocredito',
            name='tipo_aplicacao_credito',
            field=models.IntegerField(blank=True, choices=[(10, 'Apoio inicial (antes de 2015)'), (20, 'Apoio inicial I (após 2015)'), (30, 'Apoio inicial II (após 2015)'), (40, 'Fomento'), (50, 'Fomento Mulher'), (60, 'Moradia'), (70, 'PNHR-Minha Casa Minha Vida'), (80, 'Reforma Moradia'), (90, 'PNHR-Reforma')], null=True, verbose_name='Tipo de crédito'),
        ),
        migrations.AlterField(
            model_name='aplicacaocredito',
            name='valor',
            field=models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Valor (R$)'),
        ),
        migrations.AlterField(
            model_name='atendimentosaude',
            name='farmacia',
            field=models.IntegerField(blank=True, choices=[(1, 'P.A'), (2, 'Cidade')], null=True, verbose_name='Farmácia'),
        ),
        migrations.AlterField(
            model_name='atendimentosaude',
            name='hospital',
            field=models.IntegerField(blank=True, choices=[(1, 'P.A'), (2, 'Cidade')], null=True, verbose_name='Hospital'),
        ),
        migrations.AlterField(
            model_name='atendimentosaude',
            name='posto_saude',
            field=models.IntegerField(blank=True, choices=[(1, 'P.A'), (2, 'Cidade')], null=True, verbose_name='Posto de saúde'),
        ),
        migrations.AlterField(
            model_name='atividadeextrativista',
            name='especificacao',
            field=models.IntegerField(blank=True, choices=[(10, 'Açaí(Kg)'), (20, 'Babaçu(Kg)'), (30, 'Buriti(Kg)'), (40, 'Cagaita(Kg)'), (50, 'Murici(Kg)'), (60, 'Pequi(Kg)'), (70, 'Outros')], null=True, verbose_name='Especificação'),
        ),
        migrations.AlterField(
            model_name='atividadeextrativista',
            name='quantidade_frutos_ano',
            field=models.IntegerField(blank=True, null=True, verbose_name='Quantidade Colhida / Ano - Fruto(s)'),
        ),
        migrations.AlterField(
            model_name='atividadeextrativista',
            name='quantidade_palmitos_ano',
            field=models.IntegerField(blank=True, null=True, verbose_name='Quantidade Colhida / Ano - Palmito(s)'),
        ),
        migrations.AlterField(
            model_name='atividadeextrativista',
            name='valor',
            field=models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Valor R$/Kg'),
        ),
        migrations.AlterField(
            model_name='atividadefisica',
            name='atividade_fisica',
            field=models.IntegerField(blank=True, choices=[(10, 'Futebol'), (20, 'Caminhada/corrida'), (30, 'Nenhuma atividade física'), (40, 'Outros')], null=True, verbose_name='Esporte/atividade física'),
        ),
        migrations.AlterField(
            model_name='autodeclaracaoetnia',
            name='quantidade',
            field=models.IntegerField(blank=True, null=True, verbose_name='Quantos?'),
        ),
        migrations.AlterField(
            model_name='autodeclaracaoetnia',
            name='tipo_declaracao_etnia',
            field=models.IntegerField(blank=True, choices=[(10, 'Negros'), (20, 'Pardos'), (30, 'Brancos'), (40, 'Índios'), (50, 'Orientais'), (60, 'Outros')], null=True, verbose_name='Etnia'),
        ),
        migrations.AlterField(
            model_name='bemprodutivo',
            name='bem_produtivo',
            field=models.IntegerField(blank=True, choices=[(10, 'Trator'), (20, 'Caminhão'), (30, 'Caminhonete'), (40, 'Arado / grade'), (50, 'Plantadeira / adubadeira'), (60, 'Pulverizador "tratorizado"'), (70, 'Carroça ou carro de boi'), (80, 'Arado de tração animal'), (90, 'Triturador'), (100, 'Resfriador de leite'), (110, 'Cochos'), (120, 'Calcariadora'), (130, 'Bomba (pulverizador costal)'), (140, 'Matraca'), (150, 'Brete (vacinação gado)'), (160, 'Roçadeira'), (170, 'Motosserra'), (180, 'Outros')], null=True, verbose_name='Bem produtivo'),
        ),
        migrations.AlterField(
            model_name='bemprodutivo',
            name='quantidade',
            field=models.IntegerField(blank=True, null=True, verbose_name='Quantidade'),
        ),
        migrations.AlterField(
            model_name='beneficiosocial',
            name='tipo_beneficio',
            field=models.IntegerField(blank=True, choices=[(10, 'Aposentadoria por tempo de serviço/idade'), (20, 'Aposentadoria por invalidez'), (30, 'Auxílio maternidade'), (40, 'Bolsa família'), (50, 'Bolsa verde'), (60, 'Outros')], null=True, verbose_name='Benefício'),
        ),
        migrations.AlterField(
            model_name='construcaolote',
            name='construcao_no_lote',
            field=models.IntegerField(blank=True, choices=[(10, 'Galpão'), (20, 'Curral'), (30, 'Chiqueiro'), (40, 'Galinheiro'), (50, 'Segunda casa'), (60, 'Represa'), (70, 'Espaço para cultos religiosos'), (80, 'Estabelecimento comercial'), (90, 'Agroindústria'), (100, 'Outros')], null=True, verbose_name='Construção'),
        ),
        migrations.AlterField(
            model_name='construcaolote',
            name='quantidade',
            field=models.IntegerField(blank=True, null=True, verbose_name='Quantidade'),
        ),
        migrations.AlterField(
            model_name='contato',
            name='telefone',
            field=models.CharField(blank=True, max_length=12, null=True, verbose_name='Telefone'),
        ),
        migrations.AlterField(
            model_name='creditobancario',
            name='adimplente',
            field=models.IntegerField(blank=True, choices=[(1, 'Sim'), (0, 'Não')], null=True, verbose_name='Adimplente?'),
        ),
        migrations.AlterField(
            model_name='creditobancario',
            name='credito_bancario',
            field=models.IntegerField(blank=True, choices=[(10, 'Micro Crédito Produtivo (A)'), (20, 'A'), (30, 'A/C'), (40, 'Jovem'), (50, 'Mulher'), (60, 'Recuperação (Complementar)'), (70, 'Outros')], null=True, verbose_name='Tipo de crédito'),
        ),
        migrations.AlterField(
            model_name='creditobancario',
            name='valor',
            field=models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Valor (R$)'),
        ),
        migrations.AlterField(
            model_name='descarteanimal',
            name='especificacao',
            field=models.IntegerField(blank=True, choices=[(10, 'Touros'), (20, 'Vacas'), (30, 'Novilhas(os) + de 02 anos'), (40, 'Novilhas(os) + de 01 ano'), (50, 'Bezerras(os)'), (60, 'Boi')], null=True, verbose_name='Especificação'),
        ),
        migrations.AlterField(
            model_name='descarteanimal',
            name='quantidade_cabecas_comercio',
            field=models.IntegerField(blank=True, null=True, verbose_name='Nº de Cabeça(s) - Comércio'),
        ),
        migrations.AlterField(
            model_name='descarteanimal',
            name='quantidade_cabecas_consumo',
            field=models.IntegerField(blank=True, null=True, verbose_name='Nº de Cabeça(s) - Consumo'),
        ),
        migrations.AlterField(
            model_name='descarteanimal',
            name='valor_cabeca',
            field=models.DecimalField(blank=True, decimal_places=2, max_digits=7, null=True, verbose_name='R$/Cabeça'),
        ),
        migrations.AlterField(
            model_name='destinolixodomestico',
            name='destino',
            field=models.IntegerField(blank=True, choices=[(10, 'Espalhado no lote'), (20, 'Queima'), (30, 'Enterra'), (40, "Joga nos cursos d'água"), (50, 'Recicla/reaproveita lixo inorgânico'), (60, 'Deposita a céu aberto no lote')], null=True, verbose_name='Destino'),
        ),
        migrations.AlterField(
            model_name='destinomaterialorganico',
            name='destino',
            field=models.IntegerField(blank=True, choices=[(10, 'Uso para alimentação de animais'), (20, 'Faz compostagem'), (30, 'Enterra junto com inorgânico'), (40, 'Deposita a céu aberto no lote')], null=True, verbose_name='Destino'),
        ),
        migrations.AlterField(
            model_name='documentolote',
            name='tipo_documento',
            field=models.IntegerField(blank=True, choices=[(10, 'Contrato de Assentamento'), (20, 'Contrato de Concessão de Uso - CCU'), (30, 'Título Definitivo - não registrado'), (40, 'Título Definitivo - registrado cartório'), (50, 'Matrícula da Propriedade')], null=True, verbose_name='Documento'),
        ),
        migrations.AlterField(
            model_name='espacodisponivel',
            name='espaco_disponivel',
            field=models.IntegerField(blank=True, choices=[(10, 'Quadra de esportes'), (20, 'Campo de futebol'), (30, 'Salão de festas'), (40, 'Não possui')], null=True, verbose_name='Espaço disponível'),
        ),
        migrations.AlterField(
            model_name='estabelecimentoensino',
            name='estabelecimento_ensino',
            field=models.IntegerField(blank=True, choices=[(10, 'Pré-escolar (creche)'), (20, 'Ensino Fundamental'), (30, 'EJA'), (40, 'Ensino Médio'), (50, 'Ensino Superior'), (60, 'Ensino Profissionalizante'), (70, 'Não há estabelecimento de ensino no PA')], null=True, verbose_name='Estabelecimento de ensino'),
        ),
        migrations.AlterField(
            model_name='estruturaorganizativa',
            name='frequencia',
            field=models.IntegerField(blank=True, choices=[(10, 'Frequente (>70%)'), (20, 'Regularmente (50% a 70%)'), (30, 'Raramente (<50%)'), (40, 'Não Participa')], null=True, verbose_name='Frequência'),
        ),
        migrations.AlterField(
            model_name='estruturaorganizativa',
            name='tipo_estrutura_organizativa',
            field=models.IntegerField(blank=True, choices=[(10, 'Associação comunitária'), (20, 'Cooperativas (produção, créditos, etc.)'), (30, 'Associação ou grupos de mulheres'), (40, 'Núcleos de base ligados aos movimentos'), (50, 'Trabalhos coletivos (ajuda mútua) "multirões"'), (60, 'Grupos vinculados à igreja (pastoral, etc.)'), (70, 'Grupos de jovens'), (80, 'Grupos de saúde (pastoral, farmácia viva)'), (90, 'Associação de pais e mestres e outros'), (100, 'Grupos de laser e cultura')], null=True, verbose_name='Estrutura organizativa'),
        ),
        migrations.AlterField(
            model_name='fonteagua',
            name='fonte_agua',
            field=models.IntegerField(blank=True, choices=[(10, 'Poço artesiano'), (20, 'Nascente ou vertente'), (30, 'Córregos ou Rios'), (40, 'Capitação de água da chuva'), (50, 'Açude / Barreiro'), (60, 'Poço comum'), (70, 'Depósito coletivo'), (80, 'Rede de água encanada'), (90, 'Outra')], null=True, verbose_name='Fonte de água'),
        ),
        migrations.AlterField(
            model_name='licenciamentoambiental',
            name='tipo_atividade',
            field=models.IntegerField(blank=True, choices=[(10, 'Agropecuária'), (20, 'Irrigação'), (30, 'Aquicultura'), (40, 'Lazer e Turismo'), (50, 'Outros')], null=True, verbose_name='Tipo de atividade'),
        ),
        migrations.AlterField(
            model_name='membro',
            name='escolaridade',
            field=models.IntegerField(blank=True, choices=[(10, '(a) Não alfabetizado'), (20, '(b) 1º ao 4º ano'), (30, '(c) 5º ao 9º ano'), (40, '(d) Fundamental completo'), (50, '(e) EJA - Educação de Jovens e Adultos'), (60, '(f) Médio incompleto'), (70, '(g) Médio completo'), (80, '(h) Superior incompleto'), (90, '(i) Superior completo'), (100, '(j) Pós Graduação incompleto'), (110, '(k) Pós Graduação completo')], null=True, verbose_name='Escolaridade'),
        ),
        migrations.AlterField(
            model_name='membro',
            name='estuda',
            field=models.IntegerField(blank=True, choices=[(1, 'Sim'), (0, 'Não')], null=True, verbose_name='Estuda?'),
        ),
        migrations.AlterField(
            model_name='membro',
            name='idade',
            field=models.IntegerField(blank=True, null=True, verbose_name='Idade'),
        ),
        migrations.AlterField(
            model_name='membro',
            name='parentesco',
            field=models.IntegerField(blank=True, choices=[(10, 'Titular'), (20, 'Cônjuge'), (30, 'Irmão(a)'), (40, 'Tio(a)'), (50, 'Primo(a)'), (60, 'Filho(a)'), (70, 'Cunhado(a)'), (80, 'Genro/Nora'), (90, 'Neto(a)'), (100, 'Agregado(a)')], null=True, verbose_name='Parentesco'),
        ),
        migrations.AlterField(
            model_name='membro',
            name='trabalho_fora_lote_quantidade_dias_ano',
            field=models.IntegerField(blank=True, null=True, verbose_name='Quantidade de dias/ano trabalha fora do lote'),
        ),
        migrations.AlterField(
            model_name='membro',
            name='trabalho_fora_lote_valor_diaria',
            field=models.DecimalField(blank=True, decimal_places=2, max_digits=7, null=True, verbose_name='Valor da Diária (R$/dia)'),
        ),
        migrations.AlterField(
            model_name='niveltecnologicoproducaoanimal',
            name='tipo_capineira',
            field=models.IntegerField(blank=True, choices=[(10, 'Cana'), (20, 'Napier'), (99, 'Não se aplica')], null=True, verbose_name='Tipo de Capineira'),
        ),
        migrations.AlterField(
            model_name='praticaconservacionista',
            name='tipo_pratica',
            field=models.IntegerField(blank=True, choices=[(10, 'Adubação verde'), (20, 'Curvas em nível'), (30, 'Rotação/consórcio de culturas'), (40, 'Adubação orgânica'), (50, 'Cordões de vegetação em nível'), (60, 'Controle alternativo de pragas e doenças'), (70, 'Agrofloresta'), (80, 'Plantios de árvores para proteção de mananciais / áreas degradadas')], null=True, verbose_name='Prática Conservacionista'),
        ),
        migrations.AlterField(
            model_name='problemaambiental',
            name='tipo_problema',
            field=models.IntegerField(blank=True, choices=[(10, 'Erosão (laminar, sulco, voçoroca)'), (20, 'Compactação do solo'), (30, 'Contaminação por uso de  agrotóxicos/destinação inadequada de embalagens'), (40, 'Exposição de lixo de forma inadequada (a céu aberto)'), (50, 'Queima de lixo'), (60, 'Destinação inadequada de pilhas/baterias/lixo eletrônico'), (70, 'Poluição/contaminação nascente e/ou rios/córregos'), (80, 'Assoreamento de rio/córrego'), (90, 'Queimadas'), (100, 'Desmatamento'), (110, 'Outros')], null=True, verbose_name='Tipo de problema'),
        ),
        migrations.AlterField(
            model_name='producaoanimal',
            name='especificacao',
            field=models.IntegerField(blank=True, choices=[(10, 'Touros'), (20, 'Vacas'), (30, 'Novilhas(os) + de 02 anos'), (40, 'Novilhas(os) + de 01 ano'), (50, 'Bezerras(os)'), (60, 'Boi'), (70, 'Frango de corte caipira'), (80, 'Galinha caipira (somente frangos(as) e adultos)'), (90, 'Suínos'), (100, 'Ovinos'), (110, 'Equinos / Muares'), (120, 'Caprinos'), (999, 'Outros')], null=True, verbose_name='Especificação'),
        ),
        migrations.AlterField(
            model_name='producaoanimal',
            name='quantidade_cabecas',
            field=models.IntegerField(blank=True, null=True, verbose_name='Nº de Cabeça(s)'),
        ),
        migrations.AlterField(
            model_name='producaoanimal',
            name='tipo_criacao',
            field=models.IntegerField(blank=True, choices=[(1, 'Gado Leiteiro'), (2, 'Gado de Corte')], null=True, verbose_name='Tipo de criação'),
        ),
        migrations.AlterField(
            model_name='producaoanimal',
            name='valor_cabeca',
            field=models.DecimalField(blank=True, decimal_places=2, max_digits=7, null=True, verbose_name='R$/Cabeça'),
        ),
        migrations.AlterField(
            model_name='producaoflorestal',
            name='area_plantada',
            field=models.DecimalField(blank=True, decimal_places=4, max_digits=10, null=True, verbose_name='Área plantada (ha)'),
        ),
        migrations.AlterField(
            model_name='producaoflorestal',
            name='especificacao',
            field=models.IntegerField(blank=True, choices=[(10, 'Eucalipto(m³)'), (20, 'Teca(m³)'), (30, 'Seringueira(Kg/látex)'), (40, 'Seringueira(m³/Madeira)'), (50, 'Outros')], null=True, verbose_name='Especificação'),
        ),
        migrations.AlterField(
            model_name='producaoflorestal',
            name='quantidade_produzida_ano',
            field=models.IntegerField(blank=True, null=True, verbose_name='Quantidade produzida/ano'),
        ),
        migrations.AlterField(
            model_name='producaoflorestal',
            name='valor',
            field=models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='R$/Unidade colhida'),
        ),
        migrations.AlterField(
            model_name='producaovegetal',
            name='area_plantada',
            field=models.DecimalField(blank=True, decimal_places=4, max_digits=10, null=True, verbose_name='Área plantada'),
        ),
        migrations.AlterField(
            model_name='producaovegetal',
            name='medida_area_plantada',
            field=models.IntegerField(blank=True, choices=[(1, 'ha'), (2, 'm2')], null=True, verbose_name='Medida da área plantada'),
        ),
        migrations.AlterField(
            model_name='producaovegetal',
            name='tipo_producao',
            field=models.IntegerField(blank=True, choices=[(10, 'Amendoim'), (20, 'Arroz'), (30, 'Batata-doce'), (40, 'Cana-de-Açúcar'), (50, 'Feijão'), (60, 'Mamona'), (70, 'Mandioca de / Farinha'), (80, 'Mandioca de / Mesa'), (90, 'Milho'), (100, 'Alface'), (110, 'Cebolinha'), (120, 'Couve'), (130, 'Coentro'), (140, 'Couve-flor'), (150, 'Rabanete'), (160, 'Rúcula'), (170, 'Salsa'), (180, 'Abóbora'), (190, 'Maxixe'), (200, 'Melancia'), (210, 'Melão'), (220, 'Pepino'), (230, 'Pimentão'), (240, 'Quiabo'), (250, 'Tomate'), (260, 'Abacate'), (270, 'Acerola'), (280, 'Banana'), (290, 'Cajú'), (300, 'Côco'), (310, 'Goiaba'), (320, 'Jabuticaba'), (330, 'Jaca'), (340, 'Laranja'), (350, 'Lima'), (360, 'Limão'), (370, 'Manga'), (380, 'Maracujá'), (390, 'Tamarindo'), (400, 'Tangerina'), (410, 'Uva'), (999, 'Outros')], null=True, verbose_name='Tipo de produção'),
        ),
        migrations.AlterField(
            model_name='produto',
            name='especificacao',
            field=models.IntegerField(blank=True, choices=[(10, 'Carne(Kg)'), (20, 'Leite(L)'), (30, 'Mel(Kg)'), (40, 'Ovos(Dz)'), (50, 'Peixes(Kg)'), (60, 'Banha(Kg)'), (70, 'Conservas(Un)'), (80, 'Doces(Un)'), (90, 'Farinha Mandioca(Kg'), (100, 'Linguiça(Kg)'), (110, 'Polvilho de Mandioca(Kg)'), (120, 'Queijo(Kg)'), (130, 'Rapadura(Kg)'), (999, 'Outros')], null=True, verbose_name='Especificação'),
        ),
        migrations.AlterField(
            model_name='produto',
            name='producao_comercio',
            field=models.IntegerField(blank=True, null=True, verbose_name='Produção (Comércio)'),
        ),
        migrations.AlterField(
            model_name='produto',
            name='producao_consumo',
            field=models.IntegerField(blank=True, null=True, verbose_name='Produção (Consumo)'),
        ),
        migrations.AlterField(
            model_name='produto',
            name='valor',
            field=models.DecimalField(blank=True, decimal_places=2, max_digits=7, null=True, verbose_name='Valor R$'),
        ),
        migrations.AlterField(
            model_name='programasaude',
            name='programa_saude',
            field=models.IntegerField(blank=True, choices=[(10, 'Programa Saúde da Família - PSF'), (20, 'Agentes Comunitários de Saúde'), (30, 'Atendimento médico'), (40, 'Atendimento odontológico'), (50, 'Campanha de vacinação'), (60, 'Saúde da Mulher')], null=True, verbose_name='Programa/Tipo de atendimento à saúde'),
        ),
        migrations.AlterField(
            model_name='tratamentoagua',
            name='tratamento_agua',
            field=models.IntegerField(blank=True, choices=[(10, 'Não há tratamento'), (20, 'Cloração'), (30, 'Fervura'), (40, 'Filtragem'), (50, 'Dessalinização'), (60, 'Outros')], null=True, verbose_name='Forma de tratamento'),
        ),
    ]

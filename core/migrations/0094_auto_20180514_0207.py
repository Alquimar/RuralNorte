# Generated by Django 2.0.4 on 2018-05-14 05:07

from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('core', '0093_auto_20180514_0146'),
    ]

    operations = [
        migrations.AlterField(
            model_name='aplicacaocredito',
            name='tipo_aplicacao_credito',
            field=models.IntegerField(choices=[(10, 'Apoio inicial (antes de 2015)'), (20, 'Apoio inicial I (após 2015)'), (30, 'Apoio inicial II (após 2015)'), (40, 'Fomento'), (50, 'Fomento Mulher'), (60, 'Moradia'), (70, 'PNHR-Minha Casa Minha Vida'), (80, 'Reforma Moradia'), (90, 'PNHR-Reforma')], verbose_name='Tipo de crédito'),
        ),
        migrations.AlterField(
            model_name='atividadeextrativista',
            name='especificacao',
            field=models.IntegerField(choices=[(10, 'Açaí(Kg)'), (20, 'Babaçu(Kg)'), (30, 'Buriti(Kg)'), (40, 'Cagaita(Kg)'), (50, 'Murici(Kg)'), (60, 'Pequi(Kg)'), (70, 'Outros')], verbose_name='Especificação'),
        ),
        migrations.AlterField(
            model_name='atividadefisica',
            name='atividade_fisica',
            field=models.IntegerField(choices=[(10, 'Futebol'), (20, 'Caminhada/corrida'), (30, 'Nenhuma atividade física'), (40, 'Outros')], verbose_name='Esporte/atividade física'),
        ),
        migrations.AlterField(
            model_name='autodeclaracaoetnia',
            name='tipo_declaracao_etnia',
            field=models.IntegerField(choices=[(10, 'Negros'), (20, 'Pardos'), (30, 'Brancos'), (40, 'Índios'), (50, 'Orientais'), (60, 'Outros')], verbose_name='Etnia'),
        ),
        migrations.AlterField(
            model_name='bemprodutivo',
            name='bem_produtivo',
            field=models.IntegerField(choices=[(10, 'Trator'), (20, 'Caminhão'), (30, 'Caminhonete'), (40, 'Arado / grade'), (50, 'Plantadeira / adubadeira'), (60, 'Pulverizador "tratorizado"'), (70, 'Carroça ou carro de boi'), (80, 'Arado de tração animal'), (90, 'Triturador'), (100, 'Resfriador de leite'), (110, 'Cochos'), (120, 'Calcariadora'), (130, 'Bomba (pulverizador costal)'), (140, 'Matraca'), (150, 'Brete (vacinação gado)'), (160, 'Roçadeira'), (170, 'Motosserra'), (180, 'Outros')], verbose_name='Bem produtivo'),
        ),
        migrations.AlterField(
            model_name='beneficiosocial',
            name='tipo_beneficio',
            field=models.IntegerField(choices=[(10, 'Aposentadoria por tempo de serviço/idade'), (20, 'Aposentadoria por invalidez'), (30, 'Auxílio maternidade'), (40, 'Bolsa família'), (50, 'Bolsa verde'), (60, 'Outros')], verbose_name='Qual documento o lote possui?'),
        ),
        migrations.AlterField(
            model_name='construcaolote',
            name='construcao_no_lote',
            field=models.IntegerField(choices=[(10, 'Galpão'), (20, 'Curral'), (30, 'Chiqueiro'), (40, 'Galinheiro'), (50, 'Segunda casa'), (60, 'Represa'), (70, 'Espaço para cultos religiosos'), (80, 'Estabelecimento comercial'), (90, 'Agroindústria'), (100, 'Outros')], verbose_name='Construção'),
        ),
        migrations.AlterField(
            model_name='creditobancario',
            name='credito_bancario',
            field=models.IntegerField(choices=[(10, 'Micro Crédito Produtivo (A)'), (20, 'A'), (30, 'A/C'), (40, 'Jovem'), (50, 'Mulher'), (60, 'Recuperação (Complementar)'), (70, 'Outros')], verbose_name='Tipo de crédito'),
        ),
        migrations.AlterField(
            model_name='documentolote',
            name='tipo_documento',
            field=models.IntegerField(choices=[(10, 'Contrato de Assentamento'), (20, 'Contrato de Concessão de Uso - CCU'), (30, 'Título Definitivo - não registrado'), (40, 'Título Definitivo - registrado cartório'), (50, 'Matrícula da Propriedade')], verbose_name='Documento'),
        ),
        migrations.AlterField(
            model_name='espacodisponivel',
            name='espaco_disponivel',
            field=models.IntegerField(choices=[(10, 'Quadra de esportes'), (20, 'Campo de futebol'), (30, 'Salão de festas'), (40, 'Não possui')], verbose_name='Espaço disponível'),
        ),
        migrations.AlterField(
            model_name='estabelecimentoensino',
            name='estabelecimento_ensino',
            field=models.IntegerField(choices=[(10, 'Pré-escolar (creche)'), (20, 'Ensino Fundamental'), (30, 'EJA'), (40, 'Ensino Médio'), (50, 'Ensino Superior'), (60, 'Ensino Profissionalizante'), (70, 'Não há estabelecimento de ensino no PA')], verbose_name='Estabelecimento de ensino'),
        ),
        migrations.AlterField(
            model_name='estruturaorganizativa',
            name='frequencia',
            field=models.IntegerField(choices=[(10, 'Frequente (>70%)'), (20, 'Regularmente (50% a 70%)'), (30, 'Raramente (<50%)'), (40, 'Não Participa')], verbose_name='Frequência'),
        ),
        migrations.AlterField(
            model_name='estruturaorganizativa',
            name='tipo_estrutura_organizativa',
            field=models.IntegerField(choices=[(10, 'Associação comunitária'), (20, 'Cooperativas (produção, créditos, etc.)'), (30, 'Associação ou grupos de mulheres'), (40, 'Núcleos de base ligados aos movimentos'), (50, 'Trabalhos coletivos (ajuda mútua) "multirões"'), (60, 'Grupos vinculados à igreja (pastoral, etc.)'), (70, 'Grupos de jovens'), (80, 'Grupos de saúde (pastoral, farmácia viva)'), (90, 'Associação de pais e mestres e outros'), (100, 'Grupos de laser e cultura')], verbose_name='Estrutura organizativa'),
        ),
        migrations.AlterField(
            model_name='fonteagua',
            name='fonte_agua',
            field=models.IntegerField(choices=[(10, 'Poço artesiano'), (20, 'Nascente ou vertente'), (30, 'Córregos ou Rios'), (40, 'Capitação de água da chuva'), (50, 'Açude / Barreiro'), (60, 'Poço comum'), (70, 'Depósito coletivo'), (80, 'Rede de água encanada'), (90, 'Outra')], verbose_name='Fonte de água'),
        ),
        migrations.AlterField(
            model_name='licenciamentoambiental',
            name='tipo_atividade',
            field=models.IntegerField(choices=[(10, 'Agropecuária'), (20, 'Irrigação'), (30, 'Aquicultura'), (40, 'Lazer e Turismo'), (50, 'Outros')], verbose_name='Tipo de atividade'),
        ),
        migrations.AlterField(
            model_name='lote',
            name='agua_para_animais_plantio',
            field=models.IntegerField(choices=[(10, "Sim, os animais vão até um curso d'água ou represa"), (20, "Sim, a água é puxada de um curso d'água ou represa"), (30, 'Sim, temos um poço exclusivo para os animais'), (40, 'Sim, é a mesma água que vem para a casa'), (50, 'Não há água para animais'), (60, 'Sim, existe água para plantio(s) irrigado(s)'), (70, 'Não existe água para plantio(s) irrigado(s)'), (80, 'Outros')], verbose_name='No lote tem água para os animais / Plantio?'),
        ),
        migrations.AlterField(
            model_name='lote',
            name='frequencia_atividade_fisica',
            field=models.IntegerField(choices=[(10, 'Diariamente'), (20, 'Duas vezes por semana'), (30, 'Mais de duas vezes por semana'), (40, 'Não pratica')], verbose_name='Com que frequência praticam atividades físicas ou esportes?'),
        ),
        migrations.AlterField(
            model_name='lote',
            name='qualidade_servico_saude',
            field=models.IntegerField(choices=[(10, 'Ótimo'), (20, 'Bom'), (30, 'Ruim'), (40, 'Péssimo')], verbose_name='Como os moradores consideram o serviço de saúde no assentamento?'),
        ),
        migrations.AlterField(
            model_name='lote',
            name='quantas_familias_utilizam_mesma_fonte_agua',
            field=models.IntegerField(choices=[(10, 'Nenhuma'), (20, 'Uma outra família, além da sua família'), (30, 'Mais de uma')], verbose_name='Quantas famílias (além da sua) fazem o uso da mesma fonte de água que abastece o seu lote?'),
        ),
        migrations.AlterField(
            model_name='lote',
            name='regularidade_abastecimento_agua',
            field=models.IntegerField(choices=[(10, 'Sempre tem água'), (20, 'Falta água às vezes'), (30, 'Falta água com frequência'), (40, 'Nunca tem água')], verbose_name='Regularidade de abastecimento de água'),
        ),
        migrations.AlterField(
            model_name='lote',
            name='situacao_cercado_lote',
            field=models.IntegerField(choices=[(10, 'Totalmente cercado, com divisões internas'), (20, 'Totalmente cercado, sem divisões internas'), (30, 'Parcialmente cercado'), (40, 'Não está cercado')], verbose_name='Como está cercado o lote?'),
        ),
        migrations.AlterField(
            model_name='lote',
            name='situacao_estrada_acesso',
            field=models.IntegerField(choices=[(10, 'Boa'), (20, 'Razoável'), (30, 'Ruim'), (40, 'Péssima')], verbose_name='Situação anual da estrada principal acesso ao lote?'),
        ),
        migrations.AlterField(
            model_name='lote',
            name='tipo_estrada_acesso',
            field=models.IntegerField(choices=[(10, 'Asfalto'), (20, 'Estrada cascalhada'), (30, 'Estrada de terra'), (40, 'Trilheiro'), (50, 'Inexistente')], verbose_name='Como é o acesso ao lote?'),
        ),
        migrations.AlterField(
            model_name='lote',
            name='tipo_instalacao_eletrica',
            field=models.IntegerField(blank=True, choices=[(10, 'Não instalada'), (20, 'Instalada apenas para moradia'), (30, 'Instalada para moradia e outros usos'), (40, 'Outros')], null=True, verbose_name='Instalação de energia elétrica?'),
        ),
        migrations.AlterField(
            model_name='lote',
            name='tipo_instalacao_sanitaria',
            field=models.IntegerField(blank=True, choices=[(10, 'Banheiro com fossa séptica'), (20, 'Banheiro com fossa negra'), (30, 'Privada / latrina'), (40, 'Nenhuma')], null=True, verbose_name='Qual é o tipo de instalação sanitária?'),
        ),
        migrations.AlterField(
            model_name='lote',
            name='tipo_parede_externa',
            field=models.IntegerField(blank=True, choices=[(10, 'Alvenaria'), (20, 'Tábuas / Madeira'), (30, 'Tapumes ou chapas de madeira'), (40, 'Folha de zinco'), (50, 'Barro ou adobe'), (60, 'Lona'), (70, 'Outros')], null=True, verbose_name='Qual tipo de parede externa predominante da moradia?'),
        ),
        migrations.AlterField(
            model_name='membro',
            name='escolaridade',
            field=models.IntegerField(choices=[(10, 'Não alfabetizado'), (20, '1º ao 4º ano'), (30, '5º ao 9º ano'), (40, 'Fundamental completo'), (50, 'EJA - Educação de Jovens e Adultos'), (60, 'Médio incompleto'), (70, 'Médio completo'), (80, 'Superior incompleto'), (90, 'Superior completo'), (100, 'Pós Graduação incompleto'), (110, 'Pós Graduação completo')], verbose_name='Escolaridade'),
        ),
        migrations.AlterField(
            model_name='membro',
            name='parentesco',
            field=models.IntegerField(choices=[(10, 'Cônjuge'), (20, 'Titular'), (10, 'Irmão(a)'), (10, 'Tio(a)'), (10, 'Primo(a)'), (10, 'Filho(a)'), (10, 'Cunhado(a)'), (80, 'Genro/Nora'), (90, 'Neto(a)')], verbose_name='Parentesco'),
        ),
        migrations.AlterField(
            model_name='membro',
            name='trabalho_antes_do_lote',
            field=models.IntegerField(blank=True, choices=[(10, 'Sempre trabalhou no campo'), (20, 'Trabalhou parte do tempo na cidade'), (30, 'Nunca trabalhou no campo antes')], null=True, verbose_name='Antes de entrar no lote, trabalhava onde?'),
        ),
        migrations.AlterField(
            model_name='opcaoensinoutilizada',
            name='opcao_ensino',
            field=models.IntegerField(choices=[(10, 'Frequenta escola em outro assentamento'), (20, 'Frequenta escola na cidade mais próxima'), (30, 'Deixa de frequentar a escola'), (40, 'Outros')], verbose_name='Selecione'),
        ),
        migrations.AlterField(
            model_name='problemaambiental',
            name='tipo_problema',
            field=models.IntegerField(choices=[(10, 'Erosão (laminar, sulco, voçoroca)'), (20, 'Compactação do solo'), (30, 'Contaminação por uso de  agrotóxicos/destinação inadequada de embalagens'), (40, 'Exposição de lixo de forma inadequada (a céu aberto)'), (50, 'Queima de lixo'), (60, 'Destinação inadequada de pilhas/baterias/lixo eletrônico'), (70, 'Poluição/contaminação nascente e/ou rios/córregos'), (80, 'Assoreamento de rio/córrego'), (90, 'Queimadas'), (100, 'Desmatamento'), (110, 'Outros')], verbose_name='Tipo de problema'),
        ),
        migrations.AlterField(
            model_name='producaoflorestal',
            name='especificacao',
            field=models.IntegerField(choices=[(10, 'Eucalipto(m³)'), (20, 'Teca(m³)'), (30, 'Seringueira(Kg/látex)'), (40, 'Seringueira(m³/Madeira)'), (50, 'Outros')], verbose_name='Especificação'),
        ),
        migrations.AlterField(
            model_name='producaovegetal',
            name='tipo_irrigacao',
            field=models.IntegerField(blank=True, choices=[(10, 'Aspersão'), (20, 'Sulco'), (30, 'Gotejamento'), (40, 'Outros')], null=True, verbose_name='Tipo de irrigação'),
        ),
        migrations.AlterField(
            model_name='producaovegetal',
            name='tipo_producao',
            field=models.IntegerField(choices=[(10, 'Amendoim'), (20, 'Arroz'), (30, 'Batata-doce'), (40, 'Cana-de-Açúcar'), (50, 'Feijão'), (60, 'Mamona'), (70, 'Mandioca de / Farinha'), (80, 'Mandioca de / Mesa'), (90, 'Milho'), (100, 'Alface'), (110, 'Cebolinha'), (120, 'Couve'), (130, 'Coentro'), (140, 'Couve-flor'), (150, 'Rabanete'), (160, 'Rúcula'), (170, 'Salsa'), (180, 'Abóbora'), (190, 'Maxixe'), (200, 'Melancia'), (210, 'Melão'), (220, 'Pepino'), (230, 'Pimentão'), (240, 'Quiabo'), (250, 'Tomate'), (260, 'Abacate'), (270, 'Acerola'), (280, 'Banana'), (290, 'Cajú'), (300, 'Côco'), (310, 'Goiaba'), (320, 'Jabuticaba'), (330, 'Jaca'), (340, 'Laranja'), (350, 'Lima'), (360, 'Limão'), (370, 'Manga'), (380, 'Maracujá'), (390, 'Tamarindo'), (400, 'Tangerina'), (410, 'Uva'), (999, 'Outros')], verbose_name='Tipo de produção'),
        ),
        migrations.AlterField(
            model_name='produto',
            name='especificacao',
            field=models.IntegerField(choices=[(10, 'Carne(Kg)'), (20, 'Leite(L)'), (30, 'Mel(Kg)'), (40, 'Ovos(Dz)'), (50, 'Peixes(Kg)'), (60, 'Banha(Kg)'), (70, 'Conservas(Un)'), (80, 'Doces(Un)'), (90, 'Farinha Mandioca(Kg'), (100, 'Linguiça(Kg)'), (110, 'Polvilho de Mandioca(Kg)'), (120, 'Queijo(Kg)'), (130, 'Rapadura(Kg)'), (999, 'Outros')], verbose_name='Especificação'),
        ),
        migrations.AlterField(
            model_name='tratamentoagua',
            name='tratamento_agua',
            field=models.IntegerField(choices=[(10, 'Não há tratamento'), (20, 'Cloração'), (30, 'Fervura'), (40, 'Filtragem'), (50, 'Dessalinização'), (60, 'Outra')], verbose_name='Forma de tratamento'),
        ),
        migrations.AlterField(
            model_name='usofrequente',
            name='uso_frequente',
            field=models.IntegerField(choices=[(10, 'Bebidas alcoólicas'), (20, 'Cigarros'), (30, 'Remédios de alto custo'), (40, 'Outros')], verbose_name='Selecione'),
        ),
    ]
